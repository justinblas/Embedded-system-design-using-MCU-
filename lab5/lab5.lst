0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sat Mar 13 15:25:25 2021
0000              5   ;--------------------------------------------------------
                  5   $name lab5
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _readbutton
0000             30            public _test_peak
0000             31            public _refer_peak
0000             32            public _measure_time_diff
0000             33            public _halfperiod
0000             34            public _timer0_init
0000             35            public _getsn
0000             36            public _LCDprint
0000             37            public _LCD_4BIT
0000             38            public _WriteCommand
0000             39            public _WriteData
0000             40            public _LCD_byte
0000             41            public _LCD_pulse
0000             42            public _Volts_at_Pin
0000             43            public _ADC_at_Pin
0000             44            public _InitPinADC
0000             45            public _waitms
0000             46            public _Timer3us
0000             47            public _InitADC
0000             48            public __c51_external_startup
0000             49            public _LCDprint_PARM_3
0000             50            public _getsn_PARM_2
0000             51            public _LCDprint_PARM_2
0000             52            public _overflow_count
0000             53   ;--------------------------------------------------------
0000             54   ; Special Function Registers
0000             55   ;--------------------------------------------------------
0000             56   _ACC            DATA 0xe0
0000             57   _ADC0ASAH       DATA 0xb6
0000             58   _ADC0ASAL       DATA 0xb5
0000             59   _ADC0ASCF       DATA 0xa1
0000             60   _ADC0ASCT       DATA 0xc7
0000             61   _ADC0CF0        DATA 0xbc
0000             62   _ADC0CF1        DATA 0xb9
0000             63   _ADC0CF2        DATA 0xdf
0000             64   _ADC0CN0        DATA 0xe8
0000             65   _ADC0CN1        DATA 0xb2
0000             66   _ADC0CN2        DATA 0xb3
0000             67   _ADC0GTH        DATA 0xc4
0000             68   _ADC0GTL        DATA 0xc3
0000             69   _ADC0H          DATA 0xbe
0000             70   _ADC0L          DATA 0xbd
0000             71   _ADC0LTH        DATA 0xc6
0000             72   _ADC0LTL        DATA 0xc5
0000             73   _ADC0MX         DATA 0xbb
0000             74   _B              DATA 0xf0
0000             75   _CKCON0         DATA 0x8e
0000             76   _CKCON1         DATA 0xa6
0000             77   _CLEN0          DATA 0xc6
0000             78   _CLIE0          DATA 0xc7
0000             79   _CLIF0          DATA 0xe8
0000             80   _CLKSEL         DATA 0xa9
0000             81   _CLOUT0         DATA 0xd1
0000             82   _CLU0CF         DATA 0xb1
0000             83   _CLU0FN         DATA 0xaf
0000             84   _CLU0MX         DATA 0x84
0000             85   _CLU1CF         DATA 0xb3
0000             86   _CLU1FN         DATA 0xb2
0000             87   _CLU1MX         DATA 0x85
0000             88   _CLU2CF         DATA 0xb6
0000             89   _CLU2FN         DATA 0xb5
0000             90   _CLU2MX         DATA 0x91
0000             91   _CLU3CF         DATA 0xbf
0000             92   _CLU3FN         DATA 0xbe
0000             93   _CLU3MX         DATA 0xae
0000             94   _CMP0CN0        DATA 0x9b
0000             95   _CMP0CN1        DATA 0x99
0000             96   _CMP0MD         DATA 0x9d
0000             97   _CMP0MX         DATA 0x9f
0000             98   _CMP1CN0        DATA 0xbf
0000             99   _CMP1CN1        DATA 0xac
0000            100   _CMP1MD         DATA 0xab
0000            101   _CMP1MX         DATA 0xaa
0000            102   _CRC0CN0        DATA 0xce
0000            103   _CRC0CN1        DATA 0x86
0000            104   _CRC0CNT        DATA 0xd3
0000            105   _CRC0DAT        DATA 0xcb
0000            106   _CRC0FLIP       DATA 0xcf
0000            107   _CRC0IN         DATA 0xca
0000            108   _CRC0ST         DATA 0xd2
0000            109   _DAC0CF0        DATA 0x91
0000            110   _DAC0CF1        DATA 0x92
0000            111   _DAC0H          DATA 0x85
0000            112   _DAC0L          DATA 0x84
0000            113   _DAC1CF0        DATA 0x93
0000            114   _DAC1CF1        DATA 0x94
0000            115   _DAC1H          DATA 0x8a
0000            116   _DAC1L          DATA 0x89
0000            117   _DAC2CF0        DATA 0x95
0000            118   _DAC2CF1        DATA 0x96
0000            119   _DAC2H          DATA 0x8c
0000            120   _DAC2L          DATA 0x8b
0000            121   _DAC3CF0        DATA 0x9a
0000            122   _DAC3CF1        DATA 0x9c
0000            123   _DAC3H          DATA 0x8e
0000            124   _DAC3L          DATA 0x8d
0000            125   _DACGCF0        DATA 0x88
0000            126   _DACGCF1        DATA 0x98
0000            127   _DACGCF2        DATA 0xa2
0000            128   _DERIVID        DATA 0xad
0000            129   _DEVICEID       DATA 0xb5
0000            130   _DPH            DATA 0x83
0000            131   _DPL            DATA 0x82
0000            132   _EIE1           DATA 0xe6
0000            133   _EIE2           DATA 0xf3
0000            134   _EIP1           DATA 0xbb
0000            135   _EIP1H          DATA 0xee
0000            136   _EIP2           DATA 0xed
0000            137   _EIP2H          DATA 0xf6
0000            138   _EMI0CN         DATA 0xe7
0000            139   _FLKEY          DATA 0xb7
0000            140   _HFO0CAL        DATA 0xc7
0000            141   _HFO1CAL        DATA 0xd6
0000            142   _HFOCN          DATA 0xef
0000            143   _I2C0ADM        DATA 0xff
0000            144   _I2C0CN0        DATA 0xba
0000            145   _I2C0DIN        DATA 0xbc
0000            146   _I2C0DOUT       DATA 0xbb
0000            147   _I2C0FCN0       DATA 0xad
0000            148   _I2C0FCN1       DATA 0xab
0000            149   _I2C0FCT        DATA 0xf5
0000            150   _I2C0SLAD       DATA 0xbd
0000            151   _I2C0STAT       DATA 0xb9
0000            152   _IE             DATA 0xa8
0000            153   _IP             DATA 0xb8
0000            154   _IPH            DATA 0xf2
0000            155   _IT01CF         DATA 0xe4
0000            156   _LFO0CN         DATA 0xb1
0000            157   _P0             DATA 0x80
0000            158   _P0MASK         DATA 0xfe
0000            159   _P0MAT          DATA 0xfd
0000            160   _P0MDIN         DATA 0xf1
0000            161   _P0MDOUT        DATA 0xa4
0000            162   _P0SKIP         DATA 0xd4
0000            163   _P1             DATA 0x90
0000            164   _P1MASK         DATA 0xee
0000            165   _P1MAT          DATA 0xed
0000            166   _P1MDIN         DATA 0xf2
0000            167   _P1MDOUT        DATA 0xa5
0000            168   _P1SKIP         DATA 0xd5
0000            169   _P2             DATA 0xa0
0000            170   _P2MASK         DATA 0xfc
0000            171   _P2MAT          DATA 0xfb
0000            172   _P2MDIN         DATA 0xf3
0000            173   _P2MDOUT        DATA 0xa6
0000            174   _P2SKIP         DATA 0xcc
0000            175   _P3             DATA 0xb0
0000            176   _P3MDIN         DATA 0xf4
0000            177   _P3MDOUT        DATA 0x9c
0000            178   _PCA0CENT       DATA 0x9e
0000            179   _PCA0CLR        DATA 0x9c
0000            180   _PCA0CN0        DATA 0xd8
0000            181   _PCA0CPH0       DATA 0xfc
0000            182   _PCA0CPH1       DATA 0xea
0000            183   _PCA0CPH2       DATA 0xec
0000            184   _PCA0CPH3       DATA 0xf5
0000            185   _PCA0CPH4       DATA 0x85
0000            186   _PCA0CPH5       DATA 0xde
0000            187   _PCA0CPL0       DATA 0xfb
0000            188   _PCA0CPL1       DATA 0xe9
0000            189   _PCA0CPL2       DATA 0xeb
0000            190   _PCA0CPL3       DATA 0xf4
0000            191   _PCA0CPL4       DATA 0x84
0000            192   _PCA0CPL5       DATA 0xdd
0000            193   _PCA0CPM0       DATA 0xda
0000            194   _PCA0CPM1       DATA 0xdb
0000            195   _PCA0CPM2       DATA 0xdc
0000            196   _PCA0CPM3       DATA 0xae
0000            197   _PCA0CPM4       DATA 0xaf
0000            198   _PCA0CPM5       DATA 0xcc
0000            199   _PCA0H          DATA 0xfa
0000            200   _PCA0L          DATA 0xf9
0000            201   _PCA0MD         DATA 0xd9
0000            202   _PCA0POL        DATA 0x96
0000            203   _PCA0PWM        DATA 0xf7
0000            204   _PCON0          DATA 0x87
0000            205   _PCON1          DATA 0xcd
0000            206   _PFE0CN         DATA 0xc1
0000            207   _PRTDRV         DATA 0xf6
0000            208   _PSCTL          DATA 0x8f
0000            209   _PSTAT0         DATA 0xaa
0000            210   _PSW            DATA 0xd0
0000            211   _REF0CN         DATA 0xd1
0000            212   _REG0CN         DATA 0xc9
0000            213   _REVID          DATA 0xb6
0000            214   _RSTSRC         DATA 0xef
0000            215   _SBCON1         DATA 0x94
0000            216   _SBRLH1         DATA 0x96
0000            217   _SBRLL1         DATA 0x95
0000            218   _SBUF           DATA 0x99
0000            219   _SBUF0          DATA 0x99
0000            220   _SBUF1          DATA 0x92
0000            221   _SCON           DATA 0x98
0000            222   _SCON0          DATA 0x98
0000            223   _SCON1          DATA 0xc8
0000            224   _SFRPAGE        DATA 0xa7
0000            225   _SFRPGCN        DATA 0xbc
0000            226   _SFRSTACK       DATA 0xd7
0000            227   _SMB0ADM        DATA 0xd6
0000            228   _SMB0ADR        DATA 0xd7
0000            229   _SMB0CF         DATA 0xc1
0000            230   _SMB0CN0        DATA 0xc0
0000            231   _SMB0DAT        DATA 0xc2
0000            232   _SMB0FCN0       DATA 0xc3
0000            233   _SMB0FCN1       DATA 0xc4
0000            234   _SMB0FCT        DATA 0xef
0000            235   _SMB0RXLN       DATA 0xc5
0000            236   _SMB0TC         DATA 0xac
0000            237   _SMOD1          DATA 0x93
0000            238   _SP             DATA 0x81
0000            239   _SPI0CFG        DATA 0xa1
0000            240   _SPI0CKR        DATA 0xa2
0000            241   _SPI0CN0        DATA 0xf8
0000            242   _SPI0DAT        DATA 0xa3
0000            243   _SPI0FCN0       DATA 0x9a
0000            244   _SPI0FCN1       DATA 0x9b
0000            245   _SPI0FCT        DATA 0xf7
0000            246   _SPI0PCF        DATA 0xdf
0000            247   _TCON           DATA 0x88
0000            248   _TH0            DATA 0x8c
0000            249   _TH1            DATA 0x8d
0000            250   _TL0            DATA 0x8a
0000            251   _TL1            DATA 0x8b
0000            252   _TMOD           DATA 0x89
0000            253   _TMR2CN0        DATA 0xc8
0000            254   _TMR2CN1        DATA 0xfd
0000            255   _TMR2H          DATA 0xcf
0000            256   _TMR2L          DATA 0xce
0000            257   _TMR2RLH        DATA 0xcb
0000            258   _TMR2RLL        DATA 0xca
0000            259   _TMR3CN0        DATA 0x91
0000            260   _TMR3CN1        DATA 0xfe
0000            261   _TMR3H          DATA 0x95
0000            262   _TMR3L          DATA 0x94
0000            263   _TMR3RLH        DATA 0x93
0000            264   _TMR3RLL        DATA 0x92
0000            265   _TMR4CN0        DATA 0x98
0000            266   _TMR4CN1        DATA 0xff
0000            267   _TMR4H          DATA 0xa5
0000            268   _TMR4L          DATA 0xa4
0000            269   _TMR4RLH        DATA 0xa3
0000            270   _TMR4RLL        DATA 0xa2
0000            271   _TMR5CN0        DATA 0xc0
0000            272   _TMR5CN1        DATA 0xf1
0000            273   _TMR5H          DATA 0xd5
0000            274   _TMR5L          DATA 0xd4
0000            275   _TMR5RLH        DATA 0xd3
0000            276   _TMR5RLL        DATA 0xd2
0000            277   _UART0PCF       DATA 0xd9
0000            278   _UART1FCN0      DATA 0x9d
0000            279   _UART1FCN1      DATA 0xd8
0000            280   _UART1FCT       DATA 0xfa
0000            281   _UART1LIN       DATA 0x9e
0000            282   _UART1PCF       DATA 0xda
0000            283   _VDM0CN         DATA 0xff
0000            284   _WDTCN          DATA 0x97
0000            285   _XBR0           DATA 0xe1
0000            286   _XBR1           DATA 0xe2
0000            287   _XBR2           DATA 0xe3
0000            288   _XOSC0CN        DATA 0x86
0000            289   _DPTR           DATA 0x8382
0000            290   _TMR2RL         DATA 0xcbca
0000            291   _TMR3RL         DATA 0x9392
0000            292   _TMR4RL         DATA 0xa3a2
0000            293   _TMR5RL         DATA 0xd3d2
0000            294   _TMR0           DATA 0x8c8a
0000            295   _TMR1           DATA 0x8d8b
0000            296   _TMR2           DATA 0xcfce
0000            297   _TMR3           DATA 0x9594
0000            298   _TMR4           DATA 0xa5a4
0000            299   _TMR5           DATA 0xd5d4
0000            300   _SBRL1          DATA 0x9695
0000            301   _PCA0           DATA 0xfaf9
0000            302   _PCA0CP0        DATA 0xfcfb
0000            303   _PCA0CP1        DATA 0xeae9
0000            304   _PCA0CP2        DATA 0xeceb
0000            305   _PCA0CP3        DATA 0xf5f4
0000            306   _PCA0CP4        DATA 0x8584
0000            307   _PCA0CP5        DATA 0xdedd
0000            308   _ADC0ASA        DATA 0xb6b5
0000            309   _ADC0GT         DATA 0xc4c3
0000            310   _ADC0           DATA 0xbebd
0000            311   _ADC0LT         DATA 0xc6c5
0000            312   _DAC0           DATA 0x8584
0000            313   _DAC1           DATA 0x8a89
0000            314   _DAC2           DATA 0x8c8b
0000            315   _DAC3           DATA 0x8e8d
0000            316   ;--------------------------------------------------------
0000            317   ; special function bits
0000            318   ;--------------------------------------------------------
0000            319   _ACC_0          BIT 0xe0
0000            320   _ACC_1          BIT 0xe1
0000            321   _ACC_2          BIT 0xe2
0000            322   _ACC_3          BIT 0xe3
0000            323   _ACC_4          BIT 0xe4
0000            324   _ACC_5          BIT 0xe5
0000            325   _ACC_6          BIT 0xe6
0000            326   _ACC_7          BIT 0xe7
0000            327   _TEMPE          BIT 0xe8
0000            328   _ADGN0          BIT 0xe9
0000            329   _ADGN1          BIT 0xea
0000            330   _ADWINT         BIT 0xeb
0000            331   _ADBUSY         BIT 0xec
0000            332   _ADINT          BIT 0xed
0000            333   _IPOEN          BIT 0xee
0000            334   _ADEN           BIT 0xef
0000            335   _B_0            BIT 0xf0
0000            336   _B_1            BIT 0xf1
0000            337   _B_2            BIT 0xf2
0000            338   _B_3            BIT 0xf3
0000            339   _B_4            BIT 0xf4
0000            340   _B_5            BIT 0xf5
0000            341   _B_6            BIT 0xf6
0000            342   _B_7            BIT 0xf7
0000            343   _C0FIF          BIT 0xe8
0000            344   _C0RIF          BIT 0xe9
0000            345   _C1FIF          BIT 0xea
0000            346   _C1RIF          BIT 0xeb
0000            347   _C2FIF          BIT 0xec
0000            348   _C2RIF          BIT 0xed
0000            349   _C3FIF          BIT 0xee
0000            350   _C3RIF          BIT 0xef
0000            351   _D1SRC0         BIT 0x88
0000            352   _D1SRC1         BIT 0x89
0000            353   _D1AMEN         BIT 0x8a
0000            354   _D01REFSL       BIT 0x8b
0000            355   _D3SRC0         BIT 0x8c
0000            356   _D3SRC1         BIT 0x8d
0000            357   _D3AMEN         BIT 0x8e
0000            358   _D23REFSL       BIT 0x8f
0000            359   _D0UDIS         BIT 0x98
0000            360   _D1UDIS         BIT 0x99
0000            361   _D2UDIS         BIT 0x9a
0000            362   _D3UDIS         BIT 0x9b
0000            363   _EX0            BIT 0xa8
0000            364   _ET0            BIT 0xa9
0000            365   _EX1            BIT 0xaa
0000            366   _ET1            BIT 0xab
0000            367   _ES0            BIT 0xac
0000            368   _ET2            BIT 0xad
0000            369   _ESPI0          BIT 0xae
0000            370   _EA             BIT 0xaf
0000            371   _PX0            BIT 0xb8
0000            372   _PT0            BIT 0xb9
0000            373   _PX1            BIT 0xba
0000            374   _PT1            BIT 0xbb
0000            375   _PS0            BIT 0xbc
0000            376   _PT2            BIT 0xbd
0000            377   _PSPI0          BIT 0xbe
0000            378   _P0_0           BIT 0x80
0000            379   _P0_1           BIT 0x81
0000            380   _P0_2           BIT 0x82
0000            381   _P0_3           BIT 0x83
0000            382   _P0_4           BIT 0x84
0000            383   _P0_5           BIT 0x85
0000            384   _P0_6           BIT 0x86
0000            385   _P0_7           BIT 0x87
0000            386   _P1_0           BIT 0x90
0000            387   _P1_1           BIT 0x91
0000            388   _P1_2           BIT 0x92
0000            389   _P1_3           BIT 0x93
0000            390   _P1_4           BIT 0x94
0000            391   _P1_5           BIT 0x95
0000            392   _P1_6           BIT 0x96
0000            393   _P1_7           BIT 0x97
0000            394   _P2_0           BIT 0xa0
0000            395   _P2_1           BIT 0xa1
0000            396   _P2_2           BIT 0xa2
0000            397   _P2_3           BIT 0xa3
0000            398   _P2_4           BIT 0xa4
0000            399   _P2_5           BIT 0xa5
0000            400   _P2_6           BIT 0xa6
0000            401   _P3_0           BIT 0xb0
0000            402   _P3_1           BIT 0xb1
0000            403   _P3_2           BIT 0xb2
0000            404   _P3_3           BIT 0xb3
0000            405   _P3_4           BIT 0xb4
0000            406   _P3_7           BIT 0xb7
0000            407   _CCF0           BIT 0xd8
0000            408   _CCF1           BIT 0xd9
0000            409   _CCF2           BIT 0xda
0000            410   _CCF3           BIT 0xdb
0000            411   _CCF4           BIT 0xdc
0000            412   _CCF5           BIT 0xdd
0000            413   _CR             BIT 0xde
0000            414   _CF             BIT 0xdf
0000            415   _PARITY         BIT 0xd0
0000            416   _F1             BIT 0xd1
0000            417   _OV             BIT 0xd2
0000            418   _RS0            BIT 0xd3
0000            419   _RS1            BIT 0xd4
0000            420   _F0             BIT 0xd5
0000            421   _AC             BIT 0xd6
0000            422   _CY             BIT 0xd7
0000            423   _RI             BIT 0x98
0000            424   _TI             BIT 0x99
0000            425   _RB8            BIT 0x9a
0000            426   _TB8            BIT 0x9b
0000            427   _REN            BIT 0x9c
0000            428   _CE             BIT 0x9d
0000            429   _SMODE          BIT 0x9e
0000            430   _RI1            BIT 0xc8
0000            431   _TI1            BIT 0xc9
0000            432   _RBX1           BIT 0xca
0000            433   _TBX1           BIT 0xcb
0000            434   _REN1           BIT 0xcc
0000            435   _PERR1          BIT 0xcd
0000            436   _OVR1           BIT 0xce
0000            437   _SI             BIT 0xc0
0000            438   _ACK            BIT 0xc1
0000            439   _ARBLOST        BIT 0xc2
0000            440   _ACKRQ          BIT 0xc3
0000            441   _STO            BIT 0xc4
0000            442   _STA            BIT 0xc5
0000            443   _TXMODE         BIT 0xc6
0000            444   _MASTER         BIT 0xc7
0000            445   _SPIEN          BIT 0xf8
0000            446   _TXNF           BIT 0xf9
0000            447   _NSSMD0         BIT 0xfa
0000            448   _NSSMD1         BIT 0xfb
0000            449   _RXOVRN         BIT 0xfc
0000            450   _MODF           BIT 0xfd
0000            451   _WCOL           BIT 0xfe
0000            452   _SPIF           BIT 0xff
0000            453   _IT0            BIT 0x88
0000            454   _IE0            BIT 0x89
0000            455   _IT1            BIT 0x8a
0000            456   _IE1            BIT 0x8b
0000            457   _TR0            BIT 0x8c
0000            458   _TF0            BIT 0x8d
0000            459   _TR1            BIT 0x8e
0000            460   _TF1            BIT 0x8f
0000            461   _T2XCLK0        BIT 0xc8
0000            462   _T2XCLK1        BIT 0xc9
0000            463   _TR2            BIT 0xca
0000            464   _T2SPLIT        BIT 0xcb
0000            465   _TF2CEN         BIT 0xcc
0000            466   _TF2LEN         BIT 0xcd
0000            467   _TF2L           BIT 0xce
0000            468   _TF2H           BIT 0xcf
0000            469   _T4XCLK0        BIT 0x98
0000            470   _T4XCLK1        BIT 0x99
0000            471   _TR4            BIT 0x9a
0000            472   _T4SPLIT        BIT 0x9b
0000            473   _TF4CEN         BIT 0x9c
0000            474   _TF4LEN         BIT 0x9d
0000            475   _TF4L           BIT 0x9e
0000            476   _TF4H           BIT 0x9f
0000            477   _T5XCLK0        BIT 0xc0
0000            478   _T5XCLK1        BIT 0xc1
0000            479   _TR5            BIT 0xc2
0000            480   _T5SPLIT        BIT 0xc3
0000            481   _TF5CEN         BIT 0xc4
0000            482   _TF5LEN         BIT 0xc5
0000            483   _TF5L           BIT 0xc6
0000            484   _TF5H           BIT 0xc7
0000            485   _RIE            BIT 0xd8
0000            486   _RXTO0          BIT 0xd9
0000            487   _RXTO1          BIT 0xda
0000            488   _RFRQ           BIT 0xdb
0000            489   _TIE            BIT 0xdc
0000            490   _TXHOLD         BIT 0xdd
0000            491   _TXNF1          BIT 0xde
0000            492   _TFRQ           BIT 0xdf
0000            493   ;--------------------------------------------------------
0000            494   ; overlayable register banks
0000            495   ;--------------------------------------------------------
0000            496            rbank0 segment data overlay
0000            497   ;--------------------------------------------------------
0000            498   ; internal ram data
0000            499   ;--------------------------------------------------------
0000            500            rseg R_DSEG
0000            501   _overflow_count:
0000            502            ds 1
0001            503   _LCDprint_PARM_2:
0001            504            ds 1
0002            505   _getsn_PARM_2:
0002            506            ds 2
0004            507   _getsn_buff_1_89:
0004            508            ds 3
0007            509   _getsn_sloc0_1_0:
0007            510            ds 2
0009            511   _refer_peak_TT_1_103:
0009            512            ds 4
000D            513   _test_peak_TT_1_105:
000D            514            ds 4
0011            515   _main_F_1_110:
0011            516            ds 4
0015            517   _main_phase_diff_1_110:
0015            518            ds 4
0019            519   _main_buff_t_1_110:
0019            520            ds 10
0023            521   _main_buff_r_1_110:
0023            522            ds 10
002D            523   _main_buff_f_1_110:
002D            524            ds 10
0037            525   _main_buff_phase_1_110:
0037            526            ds 10
0041            527   ;--------------------------------------------------------
0041            528   ; overlayable items in internal ram 
0041            529   ;--------------------------------------------------------
0000            530            rseg    R_OSEG
0000            531            rseg    R_OSEG
0000            532   _InitPinADC_PARM_2:
0000            533            ds 1
0001            534            rseg    R_OSEG
0001            535            rseg    R_OSEG
0001            536   ;--------------------------------------------------------
0001            537   ; indirectly addressable internal ram data
0001            538   ;--------------------------------------------------------
0000            539            rseg R_ISEG
0000            540   ;--------------------------------------------------------
0000            541   ; absolute internal ram data
0000            542   ;--------------------------------------------------------
0000            543            DSEG
0000            544   ;--------------------------------------------------------
0000            545   ; bit data
0000            546   ;--------------------------------------------------------
0000            547            rseg R_BSEG
0000            548   _LCDprint_PARM_3:
0000            549            DBIT    1
0001            550   ;--------------------------------------------------------
0001            551   ; paged external ram data
0001            552   ;--------------------------------------------------------
0000            553            rseg R_PSEG
0000            554   ;--------------------------------------------------------
0000            555   ; external ram data
0000            556   ;--------------------------------------------------------
0000            557            rseg R_XSEG
0000            558   ;--------------------------------------------------------
0000            559   ; absolute external ram data
0000            560   ;--------------------------------------------------------
0000            561            XSEG
0000            562   ;--------------------------------------------------------
0000            563   ; external initialized ram data
0000            564   ;--------------------------------------------------------
0000            565            rseg R_IXSEG
0000            566            rseg R_HOME
0000            567            rseg R_GSINIT
0000            568            rseg R_CSEG
0000            569   ;--------------------------------------------------------
0000            570   ; Reset entry point and interrupt vectors
0000            571   ;--------------------------------------------------------
0000            572            CSEG at 0x0000
0000 020100     573            ljmp    _crt0
0003            574   ;--------------------------------------------------------
0003            575   ; global & static initialisations
0003            576   ;--------------------------------------------------------
0000            577            rseg R_HOME
0000            578            rseg R_GSINIT
0000            579            rseg R_GSINIT
0000            580   ;--------------------------------------------------------
0000            581   ; data variables initialization
0000            582   ;--------------------------------------------------------
0000            583            rseg R_DINIT
0000            584            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            585   ;--------------------------------------------------------
0000            586   ; code
0000            587   ;--------------------------------------------------------
0000            588            rseg R_CSEG
0000            589   ;------------------------------------------------------------
0000            590   ;Allocation info for local variables in function '_c51_external_startup'
0000            591   ;------------------------------------------------------------
0000            592   ;------------------------------------------------------------
0000            593   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:27: char _c51_external_startup (void)
0000            594   ;        -----------------------------------------
0000            595   ;         function _c51_external_startup
0000            596   ;        -----------------------------------------
0000            597   __c51_external_startup:
0000            598            using   0
0000            599   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:30: SFRPAGE = 0x00;
0000 75A700     600            mov     _SFRPAGE,#0x00
0003            601   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:31: WDTCN = 0xDE; //First key
0003 7597DE     602            mov     _WDTCN,#0xDE
0006            603   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:32: WDTCN = 0xAD; //Second key
0006 7597AD     604            mov     _WDTCN,#0xAD
0009            605   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:34: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     606            mov     _VDM0CN,#0x80
000C            607   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:35: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     608            mov     _RSTSRC,#0x06
000F            609   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:42: SFRPAGE = 0x10;
000F 75A710     610            mov     _SFRPAGE,#0x10
0012            611   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:43: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     612            mov     _PFE0CN,#0x20
0015            613   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:44: SFRPAGE = 0x00;
0015 75A700     614            mov     _SFRPAGE,#0x00
0018            615   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:65: CLKSEL = 0x00;
0018 75A900     616            mov     _CLKSEL,#0x00
001B            617   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:66: CLKSEL = 0x00;
001B 75A900     618            mov     _CLKSEL,#0x00
001E            619   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:67: while ((CLKSEL & 0x80) == 0);
001E            620   L002001?:
001E E5A9       621            mov     a,_CLKSEL
0020 30E7A0     622            jnb     acc.7,L002001?
0023            623   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:68: CLKSEL = 0x03;
0023 75A903     624            mov     _CLKSEL,#0x03
0026            625   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:69: CLKSEL = 0x03;
0026 75A903     626            mov     _CLKSEL,#0x03
0029            627   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:70: while ((CLKSEL & 0x80) == 0);
0029            628   L002004?:
0029 E5A9       629            mov     a,_CLKSEL
002B 30E720     630            jnb     acc.7,L002004?
002E            631   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:75: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     632            orl     _P0MDOUT,#0x10
0031            633   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:76: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     634            mov     _XBR0,#0x01
0034            635   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:77: XBR1     = 0X00;
0034 75E200     636            mov     _XBR1,#0x00
0037            637   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:78: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     638            mov     _XBR2,#0x40
003A            639   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:84: SCON0 = 0x10;
003A 759810     640            mov     _SCON0,#0x10
003D            641   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:85: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     642            mov     _TH1,#0xE6
0040            643   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:86: TL1 = TH1;      // Init Timer1
0040 858D8B     644            mov     _TL1,_TH1
0043            645   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:87: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     646            anl     _TMOD,#0x0F
0046            647   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:88: TMOD |=  0x20;                       
0046 438920     648            orl     _TMOD,#0x20
0049            649   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:89: TR1 = 1; // START Timer1
0049 D28E       650            setb    _TR1
004B            651   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:90: TI = 1;  // Indicate TX0 ready
004B D299       652            setb    _TI
004D            653   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:92: return 0;
004D 758200     654            mov     dpl,#0x00
0050 22         655            ret
0051            656   ;------------------------------------------------------------
0051            657   ;Allocation info for local variables in function 'InitADC'
0051            658   ;------------------------------------------------------------
0051            659   ;------------------------------------------------------------
0051            660   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:95: void InitADC (void)
0051            661   ;        -----------------------------------------
0051            662   ;         function InitADC
0051            663   ;        -----------------------------------------
0051            664   _InitADC:
0051            665   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:97: SFRPAGE = 0x00;
0051 75A700     666            mov     _SFRPAGE,#0x00
0054            667   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:98: ADEN=0; // Disable ADC
0054 C2EF       668            clr     _ADEN
0056            669   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:103: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     670            mov     _ADC0CN1,#0x80
0059            671   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:107: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     672            mov     _ADC0CF0,#0x20
005C            673   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:111: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     674            mov     _ADC0CF1,#0x1E
005F            675   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:120: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     676            mov     _ADC0CN0,#0x00
0062            677   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:125: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     678            mov     _ADC0CF2,#0x3F
0065            679   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:129: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     680            mov     _ADC0CN2,#0x00
0068            681   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:131: ADEN=1; // Enable ADC
0068 D2EF       682            setb    _ADEN
006A 22         683            ret
006B            684   ;------------------------------------------------------------
006B            685   ;Allocation info for local variables in function 'Timer3us'
006B            686   ;------------------------------------------------------------
006B            687   ;us                        Allocated to registers r2 
006B            688   ;i                         Allocated to registers r3 
006B            689   ;------------------------------------------------------------
006B            690   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:135: void Timer3us(unsigned char us)
006B            691   ;        -----------------------------------------
006B            692   ;         function Timer3us
006B            693   ;        -----------------------------------------
006B            694   _Timer3us:
006B AA82       695            mov     r2,dpl
006D            696   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:140: CKCON0|=0b_0100_0000;
006D 438E40     697            orl     _CKCON0,#0x40
0070            698   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:142: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     699            mov     _TMR3RL,#0xB8
0073 7593FF     700            mov     (_TMR3RL >> 8),#0xFF
0076            701   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:143: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     702            mov     _TMR3,_TMR3RL
0079 859395     703            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            704   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:145: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     705            mov     _TMR3CN0,#0x04
007F            706   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:146: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       707            mov     r3,#0x00
0081            708   L004004?:
0081 C3         709            clr     c
0082 EB         710            mov     a,r3
0083 9A         711            subb    a,r2
0084 5001       712            jnc     L004007?
0086            713   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:148: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            714   L004001?:
0086 E591       715            mov     a,_TMR3CN0
0088 30E720     716            jnb     acc.7,L004001?
008B            717   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:149: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     718            anl     _TMR3CN0,#0x7F
008E            719   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:146: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         720            inc     r3
008F 8001       721            sjmp    L004004?
0091            722   L004007?:
0091            723   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:151: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     724            mov     _TMR3CN0,#0x00
0094 22         725            ret
0095            726   ;------------------------------------------------------------
0095            727   ;Allocation info for local variables in function 'waitms'
0095            728   ;------------------------------------------------------------
0095            729   ;ms                        Allocated to registers r2 r3 
0095            730   ;j                         Allocated to registers r4 r5 
0095            731   ;k                         Allocated to registers r6 
0095            732   ;------------------------------------------------------------
0095            733   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:154: void waitms (unsigned int ms)
0095            734   ;        -----------------------------------------
0095            735   ;         function waitms
0095            736   ;        -----------------------------------------
0095            737   _waitms:
0095 AA82       738            mov     r2,dpl
0097 AB83       739            mov     r3,dph
0099            740   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:158: for(j=0; j<ms; j++)
0099 7C00       741            mov     r4,#0x00
009B 7D00       742            mov     r5,#0x00
009D            743   L005005?:
009D C3         744            clr     c
009E EC         745            mov     a,r4
009F 9A         746            subb    a,r2
00A0 ED         747            mov     a,r5
00A1 9B         748            subb    a,r3
00A2 5001       749            jnc     L005009?
00A4            750   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:159: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       751            mov     r6,#0x00
00A6            752   L005001?:
00A6 BE0460     753            cjne    r6,#0x04,L005018?
00A9            754   L005018?:
00A9 5001       755            jnc     L005007?
00AB 7582FA     756            mov     dpl,#0xFA
00AE C002       757            push    ar2
00B0 C003       758            push    ar3
00B2 C004       759            push    ar4
00B4 C005       760            push    ar5
00B6 C006       761            push    ar6
00B8 120100     762            lcall   _Timer3us
00BB D006       763            pop     ar6
00BD D005       764            pop     ar5
00BF D004       765            pop     ar4
00C1 D003       766            pop     ar3
00C3 D002       767            pop     ar2
00C5 0E         768            inc     r6
00C6 8001       769            sjmp    L005001?
00C8            770   L005007?:
00C8            771   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:158: for(j=0; j<ms; j++)
00C8 0C         772            inc     r4
00C9 BC00A0     773            cjne    r4,#0x00,L005005?
00CC 0D         774            inc     r5
00CD 8001       775            sjmp    L005005?
00CF            776   L005009?:
00CF 22         777            ret
00D0            778   ;------------------------------------------------------------
00D0            779   ;Allocation info for local variables in function 'InitPinADC'
00D0            780   ;------------------------------------------------------------
00D0            781   ;pin_num                   Allocated with name '_InitPinADC_PARM_2'
00D0            782   ;portno                    Allocated to registers r2 
00D0            783   ;mask                      Allocated to registers r3 
00D0            784   ;------------------------------------------------------------
00D0            785   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:164: void InitPinADC (unsigned char portno, unsigned char pin_num)
00D0            786   ;        -----------------------------------------
00D0            787   ;         function InitPinADC
00D0            788   ;        -----------------------------------------
00D0            789   _InitPinADC:
00D0 AA82       790            mov     r2,dpl
00D2            791   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:168: mask=1<<pin_num;
00D2 8560F0     792            mov     b,_InitPinADC_PARM_2
00D5 05F0       793            inc     b
00D7 7401       794            mov     a,#0x01
00D9 8001       795            sjmp    L006013?
00DB            796   L006011?:
00DB 25E0       797            add     a,acc
00DD            798   L006013?:
00DD D5F060     799            djnz    b,L006011?
00E0 FB         800            mov     r3,a
00E1            801   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:170: SFRPAGE = 0x20;
00E1 75A720     802            mov     _SFRPAGE,#0x20
00E4            803   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:171: switch (portno)
00E4 BA00A0     804            cjne    r2,#0x00,L006014?
00E7 8001       805            sjmp    L006001?
00E9            806   L006014?:
00E9 BA0120     807            cjne    r2,#0x01,L006015?
00EC 8001       808            sjmp    L006002?
00EE            809   L006015?:
00EE            810   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:173: case 0:
00EE BA02A0     811            cjne    r2,#0x02,L006005?
00F1 8001       812            sjmp    L006003?
00F3            813   L006001?:
00F3            814   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:174: P0MDIN &= (~mask); // Set pin as analog input
00F3 EB         815            mov     a,r3
00F4 F4         816            cpl     a
00F5 FA         817            mov     r2,a
00F6 52F1       818            anl     _P0MDIN,a
00F8            819   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:175: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00F8 EB         820            mov     a,r3
00F9 42D4       821            orl     _P0SKIP,a
00FB            822   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:176: break;
00FB            823   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:177: case 1:
00FB 8001       824            sjmp    L006005?
00FD            825   L006002?:
00FD            826   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:178: P1MDIN &= (~mask); // Set pin as analog input
00FD EB         827            mov     a,r3
00FE F4         828            cpl     a
00FF FA         829            mov     r2,a
0100 52F2       830            anl     _P1MDIN,a
0102            831   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:179: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0102 EB         832            mov     a,r3
0103 42D5       833            orl     _P1SKIP,a
0105            834   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:180: break;
0105            835   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:181: case 2:
0105 8001       836            sjmp    L006005?
0107            837   L006003?:
0107            838   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:182: P2MDIN &= (~mask); // Set pin as analog input
0107 EB         839            mov     a,r3
0108 F4         840            cpl     a
0109 FA         841            mov     r2,a
010A 52F3       842            anl     _P2MDIN,a
010C            843   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:183: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010C EB         844            mov     a,r3
010D 42CC       845            orl     _P2SKIP,a
010F            846   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:187: }
010F            847   L006005?:
010F            848   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:188: SFRPAGE = 0x00;
010F 75A700     849            mov     _SFRPAGE,#0x00
0112 22         850            ret
0113            851   ;------------------------------------------------------------
0113            852   ;Allocation info for local variables in function 'ADC_at_Pin'
0113            853   ;------------------------------------------------------------
0113            854   ;pin                       Allocated to registers 
0113            855   ;------------------------------------------------------------
0113            856   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:191: unsigned int ADC_at_Pin(unsigned char pin)
0113            857   ;        -----------------------------------------
0113            858   ;         function ADC_at_Pin
0113            859   ;        -----------------------------------------
0113            860   _ADC_at_Pin:
0113 8582BB     861            mov     _ADC0MX,dpl
0116            862   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:194: ADINT = 0;
0116 C2ED       863            clr     _ADINT
0118            864   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:195: ADBUSY = 1;     // Convert voltage at the pin
0118 D2EC       865            setb    _ADBUSY
011A            866   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:196: while (!ADINT); // Wait for conversion to complete
011A            867   L007001?:
011A 30ED20     868            jnb     _ADINT,L007001?
011D            869   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:197: return (ADC0);
011D 85BD82     870            mov     dpl,_ADC0
0120 85BE83     871            mov     dph,(_ADC0 >> 8)
0123 22         872            ret
0124            873   ;------------------------------------------------------------
0124            874   ;Allocation info for local variables in function 'Volts_at_Pin'
0124            875   ;------------------------------------------------------------
0124            876   ;pin                       Allocated to registers r2 
0124            877   ;------------------------------------------------------------
0124            878   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:200: float Volts_at_Pin(unsigned char pin)
0124            879   ;        -----------------------------------------
0124            880   ;         function Volts_at_Pin
0124            881   ;        -----------------------------------------
0124            882   _Volts_at_Pin:
0124            883   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:202: return ((ADC_at_Pin(pin)*VDD)/16383.0);
0124 120100     884            lcall   _ADC_at_Pin
0127 120100     885            lcall   ___uint2fs
012A AA82       886            mov     r2,dpl
012C AB83       887            mov     r3,dph
012E ACF0       888            mov     r4,b
0130 FD         889            mov     r5,a
0131 C002       890            push    ar2
0133 C003       891            push    ar3
0135 C004       892            push    ar4
0137 C005       893            push    ar5
0139 906C8B     894            mov     dptr,#0x6C8B
013C 75F053     895            mov     b,#0x53
013F 7440       896            mov     a,#0x40
0141 120100     897            lcall   ___fsmul
0144 AA82       898            mov     r2,dpl
0146 AB83       899            mov     r3,dph
0148 ACF0       900            mov     r4,b
014A FD         901            mov     r5,a
014B E581       902            mov     a,sp
014D 24FC       903            add     a,#0xfc
014F F581       904            mov     sp,a
0151 E4         905            clr     a
0152 C0E0       906            push    acc
0154 74FC       907            mov     a,#0xFC
0156 C0E0       908            push    acc
0158 747F       909            mov     a,#0x7F
015A C0E0       910            push    acc
015C 7446       911            mov     a,#0x46
015E C0E0       912            push    acc
0160 8A82       913            mov     dpl,r2
0162 8B83       914            mov     dph,r3
0164 8CF0       915            mov     b,r4
0166 ED         916            mov     a,r5
0167 120100     917            lcall   ___fsdiv
016A AA82       918            mov     r2,dpl
016C AB83       919            mov     r3,dph
016E ACF0       920            mov     r4,b
0170 FD         921            mov     r5,a
0171 E581       922            mov     a,sp
0173 24FC       923            add     a,#0xfc
0175 F581       924            mov     sp,a
0177 8A82       925            mov     dpl,r2
0179 8B83       926            mov     dph,r3
017B 8CF0       927            mov     b,r4
017D ED         928            mov     a,r5
017E 22         929            ret
017F            930   ;------------------------------------------------------------
017F            931   ;Allocation info for local variables in function 'LCD_pulse'
017F            932   ;------------------------------------------------------------
017F            933   ;------------------------------------------------------------
017F            934   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:205: void LCD_pulse (void)
017F            935   ;        -----------------------------------------
017F            936   ;         function LCD_pulse
017F            937   ;        -----------------------------------------
017F            938   _LCD_pulse:
017F            939   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:207: LCD_E=1;
017F D296       940            setb    _P1_6
0181            941   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:208: Timer3us(40);
0181 758228     942            mov     dpl,#0x28
0184 120100     943            lcall   _Timer3us
0187            944   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:209: LCD_E=0;
0187 C296       945            clr     _P1_6
0189 22         946            ret
018A            947   ;------------------------------------------------------------
018A            948   ;Allocation info for local variables in function 'LCD_byte'
018A            949   ;------------------------------------------------------------
018A            950   ;x                         Allocated to registers r2 
018A            951   ;------------------------------------------------------------
018A            952   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:213: void LCD_byte (unsigned char x)
018A            953   ;        -----------------------------------------
018A            954   ;         function LCD_byte
018A            955   ;        -----------------------------------------
018A            956   _LCD_byte:
018A AA82       957            mov     r2,dpl
018C            958   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:216: ACC=x; //Send high nible
018C 8AE0       959            mov     _ACC,r2
018E            960   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:217: LCD_D7=ACC_7;
018E A2E7       961            mov     c,_ACC_7
0190 9286       962            mov     _P0_6,c
0192            963   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:218: LCD_D6=ACC_6;
0192 A2E6       964            mov     c,_ACC_6
0194 9287       965            mov     _P0_7,c
0196            966   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:219: LCD_D5=ACC_5;
0196 A2E5       967            mov     c,_ACC_5
0198 9290       968            mov     _P1_0,c
019A            969   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:220: LCD_D4=ACC_4;
019A A2E4       970            mov     c,_ACC_4
019C 9291       971            mov     _P1_1,c
019E            972   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:221: LCD_pulse();
019E C002       973            push    ar2
01A0 120100     974            lcall   _LCD_pulse
01A3            975   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:222: Timer3us(40);
01A3 758228     976            mov     dpl,#0x28
01A6 120100     977            lcall   _Timer3us
01A9 D002       978            pop     ar2
01AB            979   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:223: ACC=x; //Send low nible
01AB 8AE0       980            mov     _ACC,r2
01AD            981   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:224: LCD_D7=ACC_3;
01AD A2E3       982            mov     c,_ACC_3
01AF 9286       983            mov     _P0_6,c
01B1            984   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:225: LCD_D6=ACC_2;
01B1 A2E2       985            mov     c,_ACC_2
01B3 9287       986            mov     _P0_7,c
01B5            987   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:226: LCD_D5=ACC_1;
01B5 A2E1       988            mov     c,_ACC_1
01B7 9290       989            mov     _P1_0,c
01B9            990   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:227: LCD_D4=ACC_0;
01B9 A2E0       991            mov     c,_ACC_0
01BB 9291       992            mov     _P1_1,c
01BD            993   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:228: LCD_pulse();
01BD 020100     994            ljmp    _LCD_pulse
01C0            995   ;------------------------------------------------------------
01C0            996   ;Allocation info for local variables in function 'WriteData'
01C0            997   ;------------------------------------------------------------
01C0            998   ;x                         Allocated to registers r2 
01C0            999   ;------------------------------------------------------------
01C0           1000   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:231: void WriteData (unsigned char x)
01C0           1001   ;        -----------------------------------------
01C0           1002   ;         function WriteData
01C0           1003   ;        -----------------------------------------
01C0           1004   _WriteData:
01C0 AA82      1005            mov     r2,dpl
01C2           1006   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:233: LCD_RS=1;
01C2 D2A0      1007            setb    _P2_0
01C4           1008   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:234: LCD_byte(x);
01C4 8A82      1009            mov     dpl,r2
01C6 120100    1010            lcall   _LCD_byte
01C9           1011   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:235: waitms(2);
01C9 900002    1012            mov     dptr,#0x0002
01CC 020100    1013            ljmp    _waitms
01CF           1014   ;------------------------------------------------------------
01CF           1015   ;Allocation info for local variables in function 'WriteCommand'
01CF           1016   ;------------------------------------------------------------
01CF           1017   ;x                         Allocated to registers r2 
01CF           1018   ;------------------------------------------------------------
01CF           1019   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:238: void WriteCommand (unsigned char x)
01CF           1020   ;        -----------------------------------------
01CF           1021   ;         function WriteCommand
01CF           1022   ;        -----------------------------------------
01CF           1023   _WriteCommand:
01CF AA82      1024            mov     r2,dpl
01D1           1025   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:240: LCD_RS=0;
01D1 C2A0      1026            clr     _P2_0
01D3           1027   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:241: LCD_byte(x);
01D3 8A82      1028            mov     dpl,r2
01D5 120100    1029            lcall   _LCD_byte
01D8           1030   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:242: waitms(5);
01D8 900005    1031            mov     dptr,#0x0005
01DB 020100    1032            ljmp    _waitms
01DE           1033   ;------------------------------------------------------------
01DE           1034   ;Allocation info for local variables in function 'LCD_4BIT'
01DE           1035   ;------------------------------------------------------------
01DE           1036   ;------------------------------------------------------------
01DE           1037   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:245: void LCD_4BIT (void)
01DE           1038   ;        -----------------------------------------
01DE           1039   ;         function LCD_4BIT
01DE           1040   ;        -----------------------------------------
01DE           1041   _LCD_4BIT:
01DE           1042   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:247: LCD_E=0; // Resting state of LCD's enable is zero
01DE C296      1043            clr     _P1_6
01E0           1044   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:248: LCD_RW=0; // We are only writing to the LCD in this program
01E0 C297      1045            clr     _P1_7
01E2           1046   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:249: waitms(20);
01E2 900014    1047            mov     dptr,#0x0014
01E5 120100    1048            lcall   _waitms
01E8           1049   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:251: WriteCommand(0x33);
01E8 758233    1050            mov     dpl,#0x33
01EB 120100    1051            lcall   _WriteCommand
01EE           1052   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:252: WriteCommand(0x33);
01EE 758233    1053            mov     dpl,#0x33
01F1 120100    1054            lcall   _WriteCommand
01F4           1055   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:253: WriteCommand(0x32); // Change to 4-bit mode
01F4 758232    1056            mov     dpl,#0x32
01F7 120100    1057            lcall   _WriteCommand
01FA           1058   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:256: WriteCommand(0x28);
01FA 758228    1059            mov     dpl,#0x28
01FD 120100    1060            lcall   _WriteCommand
0200           1061   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:257: WriteCommand(0x0c);
0200 75820C    1062            mov     dpl,#0x0C
0203 120100    1063            lcall   _WriteCommand
0206           1064   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:258: WriteCommand(0x01); // Clear screen command (takes some time)
0206 758201    1065            mov     dpl,#0x01
0209 120100    1066            lcall   _WriteCommand
020C           1067   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:259: waitms(20); // Wait for clear screen command to finsih.
020C 900014    1068            mov     dptr,#0x0014
020F 020100    1069            ljmp    _waitms
0212           1070   ;------------------------------------------------------------
0212           1071   ;Allocation info for local variables in function 'LCDprint'
0212           1072   ;------------------------------------------------------------
0212           1073   ;line                      Allocated with name '_LCDprint_PARM_2'
0212           1074   ;string                    Allocated to registers r2 r3 r4 
0212           1075   ;j                         Allocated to registers r5 r6 
0212           1076   ;------------------------------------------------------------
0212           1077   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:262: void LCDprint(char * string, unsigned char line, bit clear)
0212           1078   ;        -----------------------------------------
0212           1079   ;         function LCDprint
0212           1080   ;        -----------------------------------------
0212           1081   _LCDprint:
0212 AA82      1082            mov     r2,dpl
0214 AB83      1083            mov     r3,dph
0216 ACF0      1084            mov     r4,b
0218           1085   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:266: WriteCommand(line==2?0xc0:0x80);
0218 7402      1086            mov     a,#0x02
021A B5A068    1087            cjne    a,_LCDprint_PARM_2,L014013?
021D 7DC0      1088            mov     r5,#0xC0
021F 8001      1089            sjmp    L014014?
0221           1090   L014013?:
0221 7D80      1091            mov     r5,#0x80
0223           1092   L014014?:
0223 8D82      1093            mov     dpl,r5
0225 C002      1094            push    ar2
0227 C003      1095            push    ar3
0229 C004      1096            push    ar4
022B 120100    1097            lcall   _WriteCommand
022E           1098   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:267: waitms(5);
022E 900005    1099            mov     dptr,#0x0005
0231 120100    1100            lcall   _waitms
0234 D004      1101            pop     ar4
0236 D003      1102            pop     ar3
0238 D002      1103            pop     ar2
023A           1104   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:268: for(j=0; string[j]!=0; j++)     WriteData(string[j]);// Write the message
023A 7D00      1105            mov     r5,#0x00
023C 7E00      1106            mov     r6,#0x00
023E           1107   L014003?:
023E ED        1108            mov     a,r5
023F 2A        1109            add     a,r2
0240 FF        1110            mov     r7,a
0241 EE        1111            mov     a,r6
0242 3B        1112            addc    a,r3
0243 F8        1113            mov     r0,a
0244 8C01      1114            mov     ar1,r4
0246 8F82      1115            mov     dpl,r7
0248 8883      1116            mov     dph,r0
024A 89F0      1117            mov     b,r1
024C 120100    1118            lcall   __gptrget
024F FF        1119            mov     r7,a
0250 6001      1120            jz      L014006?
0252 8F82      1121            mov     dpl,r7
0254 C002      1122            push    ar2
0256 C003      1123            push    ar3
0258 C004      1124            push    ar4
025A C005      1125            push    ar5
025C C006      1126            push    ar6
025E 120100    1127            lcall   _WriteData
0261 D006      1128            pop     ar6
0263 D005      1129            pop     ar5
0265 D004      1130            pop     ar4
0267 D003      1131            pop     ar3
0269 D002      1132            pop     ar2
026B 0D        1133            inc     r5
026C BD00E8    1134            cjne    r5,#0x00,L014003?
026F 0E        1135            inc     r6
0270 8001      1136            sjmp    L014003?
0272           1137   L014006?:
0272           1138   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:269: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0272 3010A8    1139            jnb     _LCDprint_PARM_3,L014011?
0275 8D02      1140            mov     ar2,r5
0277 8E03      1141            mov     ar3,r6
0279           1142   L014007?:
0279 C3        1143            clr     c
027A EA        1144            mov     a,r2
027B 9410      1145            subb    a,#0x10
027D EB        1146            mov     a,r3
027E 6480      1147            xrl     a,#0x80
0280 9480      1148            subb    a,#0x80
0282 5001      1149            jnc     L014011?
0284 758220    1150            mov     dpl,#0x20
0287 C002      1151            push    ar2
0289 C003      1152            push    ar3
028B 120100    1153            lcall   _WriteData
028E D003      1154            pop     ar3
0290 D002      1155            pop     ar2
0292 0A        1156            inc     r2
0293 BA00E8    1157            cjne    r2,#0x00,L014007?
0296 0B        1158            inc     r3
0297 8001      1159            sjmp    L014007?
0299           1160   L014011?:
0299 22        1161            ret
029A           1162   ;------------------------------------------------------------
029A           1163   ;Allocation info for local variables in function 'getsn'
029A           1164   ;------------------------------------------------------------
029A           1165   ;len                       Allocated with name '_getsn_PARM_2'
029A           1166   ;buff                      Allocated with name '_getsn_buff_1_89'
029A           1167   ;j                         Allocated with name '_getsn_sloc0_1_0'
029A           1168   ;c                         Allocated to registers r3 
029A           1169   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
029A           1170   ;------------------------------------------------------------
029A           1171   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:272: int getsn (char * buff, int len)
029A           1172   ;        -----------------------------------------
029A           1173   ;         function getsn
029A           1174   ;        -----------------------------------------
029A           1175   _getsn:
029A 858260    1176            mov     _getsn_buff_1_89,dpl
029D 858361    1177            mov     (_getsn_buff_1_89 + 1),dph
02A0 85F062    1178            mov     (_getsn_buff_1_89 + 2),b
02A3           1179   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:277: for(j=0; j<(len-1); j++)
02A3 E4        1180            clr     a
02A4 F5B0      1181            mov     _getsn_sloc0_1_0,a
02A6 F5B1      1182            mov     (_getsn_sloc0_1_0 + 1),a
02A8 E550      1183            mov     a,_getsn_PARM_2
02AA 24FF      1184            add     a,#0xff
02AC FF        1185            mov     r7,a
02AD E551      1186            mov     a,(_getsn_PARM_2 + 1)
02AF 34FF      1187            addc    a,#0xff
02B1 F8        1188            mov     r0,a
02B2 7900      1189            mov     r1,#0x00
02B4 7A00      1190            mov     r2,#0x00
02B6           1191   L015005?:
02B6 C3        1192            clr     c
02B7 E9        1193            mov     a,r1
02B8 9F        1194            subb    a,r7
02B9 EA        1195            mov     a,r2
02BA 6480      1196            xrl     a,#0x80
02BC 88F0      1197            mov     b,r0
02BE 63F080    1198            xrl     b,#0x80
02C1 95F0      1199            subb    a,b
02C3 5001      1200            jnc     L015008?
02C5           1201   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:279: c=getchar();
02C5 C002      1202            push    ar2
02C7 C007      1203            push    ar7
02C9 C000      1204            push    ar0
02CB C001      1205            push    ar1
02CD 120100    1206            lcall   _getchar
02D0 AB82      1207            mov     r3,dpl
02D2 D001      1208            pop     ar1
02D4 D000      1209            pop     ar0
02D6 D007      1210            pop     ar7
02D8 D002      1211            pop     ar2
02DA           1212   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:280: if ( (c=='\n') || (c=='\r') )
02DA BB0AE8    1213            cjne    r3,#0x0A,L015015?
02DD 8001      1214            sjmp    L015001?
02DF           1215   L015015?:
02DF BB0D68    1216            cjne    r3,#0x0D,L015002?
02E2           1217   L015001?:
02E2           1218   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:282: buff[j]=0;
02E2 E5B0      1219            mov     a,_getsn_sloc0_1_0
02E4 2560      1220            add     a,_getsn_buff_1_89
02E6 FC        1221            mov     r4,a
02E7 E5B1      1222            mov     a,(_getsn_sloc0_1_0 + 1)
02E9 3561      1223            addc    a,(_getsn_buff_1_89 + 1)
02EB FD        1224            mov     r5,a
02EC AE62      1225            mov     r6,(_getsn_buff_1_89 + 2)
02EE 8C82      1226            mov     dpl,r4
02F0 8D83      1227            mov     dph,r5
02F2 8EF0      1228            mov     b,r6
02F4 E4        1229            clr     a
02F5 120100    1230            lcall   __gptrput
02F8           1231   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:283: return j;
02F8 85B082    1232            mov     dpl,_getsn_sloc0_1_0
02FB 85B183    1233            mov     dph,(_getsn_sloc0_1_0 + 1)
02FE 22        1234            ret
02FF           1235   L015002?:
02FF           1236   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:287: buff[j]=c;
02FF E9        1237            mov     a,r1
0300 2560      1238            add     a,_getsn_buff_1_89
0302 FC        1239            mov     r4,a
0303 EA        1240            mov     a,r2
0304 3561      1241            addc    a,(_getsn_buff_1_89 + 1)
0306 FD        1242            mov     r5,a
0307 AE62      1243            mov     r6,(_getsn_buff_1_89 + 2)
0309 8C82      1244            mov     dpl,r4
030B 8D83      1245            mov     dph,r5
030D 8EF0      1246            mov     b,r6
030F EB        1247            mov     a,r3
0310 120100    1248            lcall   __gptrput
0313           1249   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:277: for(j=0; j<(len-1); j++)
0313 09        1250            inc     r1
0314 B900E8    1251            cjne    r1,#0x00,L015018?
0317 0A        1252            inc     r2
0318           1253   L015018?:
0318 89B0      1254            mov     _getsn_sloc0_1_0,r1
031A 8AB1      1255            mov     (_getsn_sloc0_1_0 + 1),r2
031C 8001      1256            sjmp    L015005?
031E           1257   L015008?:
031E           1258   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:290: buff[j]=0;
031E E5B0      1259            mov     a,_getsn_sloc0_1_0
0320 2560      1260            add     a,_getsn_buff_1_89
0322 FA        1261            mov     r2,a
0323 E5B1      1262            mov     a,(_getsn_sloc0_1_0 + 1)
0325 3561      1263            addc    a,(_getsn_buff_1_89 + 1)
0327 FB        1264            mov     r3,a
0328 AC62      1265            mov     r4,(_getsn_buff_1_89 + 2)
032A 8A82      1266            mov     dpl,r2
032C 8B83      1267            mov     dph,r3
032E 8CF0      1268            mov     b,r4
0330 E4        1269            clr     a
0331 120100    1270            lcall   __gptrput
0334           1271   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:291: return len;
0334 855082    1272            mov     dpl,_getsn_PARM_2
0337 855183    1273            mov     dph,(_getsn_PARM_2 + 1)
033A 22        1274            ret
033B           1275   ;------------------------------------------------------------
033B           1276   ;Allocation info for local variables in function 'timer0_init'
033B           1277   ;------------------------------------------------------------
033B           1278   ;------------------------------------------------------------
033B           1279   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:294: void timer0_init(void)
033B           1280   ;        -----------------------------------------
033B           1281   ;         function timer0_init
033B           1282   ;        -----------------------------------------
033B           1283   _timer0_init:
033B           1284   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:296: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
033B 5389F0    1285            anl     _TMOD,#0xF0
033E           1286   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:297: TMOD|=0b_0000_0101; // Timer/Counter 0 used as a 16-bit counter
033E 438905    1287            orl     _TMOD,#0x05
0341           1288   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:298: TR0=0; // Stop Timer/Counter 0
0341 C28C      1289            clr     _TR0
0343 22        1290            ret
0344           1291   ;------------------------------------------------------------
0344           1292   ;Allocation info for local variables in function 'halfperiod'
0344           1293   ;------------------------------------------------------------
0344           1294   ;halft                     Allocated to registers r2 r3 r4 r5 
0344           1295   ;myof                      Allocated to registers r2 r3 
0344           1296   ;------------------------------------------------------------
0344           1297   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:302: float halfperiod(void){
0344           1298   ;        -----------------------------------------
0344           1299   ;         function halfperiod
0344           1300   ;        -----------------------------------------
0344           1301   _halfperiod:
0344           1302   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:305: TR0=0; // Stop timer 0
0344 C28C      1303            clr     _TR0
0346           1304   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:306: TMOD &= 0xF0; TMOD |= 0x01;
0346 5389F0    1305            anl     _TMOD,#0xF0
0349 438901    1306            orl     _TMOD,#0x01
034C           1307   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:307: TH0=0; TL0=0; // Reset the timer
034C 758C00    1308            mov     _TH0,#0x00
034F 758A00    1309            mov     _TL0,#0x00
0352           1310   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:308: TF0 = 0 ;
0352 C28D      1311            clr     _TF0
0354           1312   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:309: while (P3_0==1); // Wait for the signal to be zero
0354           1313   L017001?:
0354 20B028    1314            jb      _P3_0,L017001?
0357           1315   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:310: while (P3_0==0);
0357           1316   L017004?:
0357 30B068    1317            jnb     _P3_0,L017004?
035A           1318   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:312: TR0 =1 ; // start timer 0 
035A D28C      1319            setb    _TR0
035C           1320   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:313: while(P3_0==1)
035C 7A00      1321            mov     r2,#0x00
035E 7B00      1322            mov     r3,#0x00
0360           1323   L017009?:
0360 30B0E8    1324            jnb     _P3_0,L017011?
0363           1325   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:315: if(TF0){TF0=0; myof++;}
0363 108D28    1326            jbc     _TF0,L017024?
0366 8001      1327            sjmp    L017009?
0368           1328   L017024?:
0368 0A        1329            inc     r2
0369 BA00A8    1330            cjne    r2,#0x00,L017009?
036C 0B        1331            inc     r3
036D 8001      1332            sjmp    L017009?
036F           1333   L017011?:
036F           1334   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:318: TR0=0;
036F C28C      1335            clr     _TR0
0371           1336   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:321: halft=myof*0x10000L+TH0*0x100L+TL0;
0371 EB        1337            mov     a,r3
0372 33        1338            rlc     a
0373 95E0      1339            subb    a,acc
0375 8B05      1340            mov     ar5,r3
0377 8A04      1341            mov     ar4,r2
0379 7B00      1342            mov     r3,#0x00
037B 7A00      1343            mov     r2,#0x00
037D AE8C      1344            mov     r6,_TH0
037F 7F00      1345            mov     r7,#0x00
0381 7800      1346            mov     r0,#0x00
0383 8801      1347            mov     ar1,r0
0385 8F00      1348            mov     ar0,r7
0387 8E07      1349            mov     ar7,r6
0389 7E00      1350            mov     r6,#0x00
038B EE        1351            mov     a,r6
038C 2A        1352            add     a,r2
038D FA        1353            mov     r2,a
038E EF        1354            mov     a,r7
038F 3B        1355            addc    a,r3
0390 FB        1356            mov     r3,a
0391 E8        1357            mov     a,r0
0392 3C        1358            addc    a,r4
0393 FC        1359            mov     r4,a
0394 E9        1360            mov     a,r1
0395 3D        1361            addc    a,r5
0396 FD        1362            mov     r5,a
0397 AE8A      1363            mov     r6,_TL0
0399 E4        1364            clr     a
039A FF        1365            mov     r7,a
039B 33        1366            rlc     a
039C 95E0      1367            subb    a,acc
039E F8        1368            mov     r0,a
039F F9        1369            mov     r1,a
03A0 EE        1370            mov     a,r6
03A1 2A        1371            add     a,r2
03A2 FA        1372            mov     r2,a
03A3 EF        1373            mov     a,r7
03A4 3B        1374            addc    a,r3
03A5 FB        1375            mov     r3,a
03A6 E8        1376            mov     a,r0
03A7 3C        1377            addc    a,r4
03A8 FC        1378            mov     r4,a
03A9 E9        1379            mov     a,r1
03AA 3D        1380            addc    a,r5
03AB 8A82      1381            mov     dpl,r2
03AD 8B83      1382            mov     dph,r3
03AF 8CF0      1383            mov     b,r4
03B1           1384   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:322: return halft;
03B1 020100    1385            ljmp    ___slong2fs
03B4           1386   ;------------------------------------------------------------
03B4           1387   ;Allocation info for local variables in function 'measure_time_diff'
03B4           1388   ;------------------------------------------------------------
03B4           1389   ;timediff                  Allocated to registers r2 r3 r4 r5 
03B4           1390   ;------------------------------------------------------------
03B4           1391   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:325: float measure_time_diff(void){
03B4           1392   ;        -----------------------------------------
03B4           1393   ;         function measure_time_diff
03B4           1394   ;        -----------------------------------------
03B4           1395   _measure_time_diff:
03B4           1396   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:327: TR0 =0;
03B4 C28C      1397            clr     _TR0
03B6           1398   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:328: TMOD &= 0xF0; TMOD |= 0x01; // Set timer 0 as 16-bit timer
03B6 5389F0    1399            anl     _TMOD,#0xF0
03B9 438901    1400            orl     _TMOD,#0x01
03BC           1401   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:329: TH0=0; TL0=0; // Reset the timer
03BC 758C00    1402            mov     _TH0,#0x00
03BF 758A00    1403            mov     _TL0,#0x00
03C2           1404   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:330: while(P3_1==1);   // TEST -zero cross wait for signal to be 0 
03C2           1405   L018001?:
03C2 20B1A8    1406            jb      _P3_1,L018001?
03C5           1407   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:331: while(P3_1==0);
03C5           1408   L018004?:
03C5 30B1E8    1409            jnb     _P3_1,L018004?
03C8           1410   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:332: TR0=1;    // start timing 
03C8 D28C      1411            setb    _TR0
03CA           1412   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:333: while(P3_0==1);  //wait for  signal to be zero 
03CA           1413   L018007?:
03CA 20B028    1414            jb      _P3_0,L018007?
03CD           1415   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:334: while(P3_0==0);
03CD           1416   L018010?:
03CD 30B068    1417            jnb     _P3_0,L018010?
03D0           1418   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:335: TR0 = 0;
03D0 C28C      1419            clr     _TR0
03D2           1420   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:336: timediff = ((float)TH0*0x100+(float)TL0)*(((float)12.0*1000000L)/SYSCLK);  
03D2 858C82    1421            mov     dpl,_TH0
03D5 120100    1422            lcall   ___uchar2fs
03D8 AA82      1423            mov     r2,dpl
03DA AB83      1424            mov     r3,dph
03DC ACF0      1425            mov     r4,b
03DE FD        1426            mov     r5,a
03DF C002      1427            push    ar2
03E1 C003      1428            push    ar3
03E3 C004      1429            push    ar4
03E5 C005      1430            push    ar5
03E7 900000    1431            mov     dptr,#0x0000
03EA 75F080    1432            mov     b,#0x80
03ED 7443      1433            mov     a,#0x43
03EF 120100    1434            lcall   ___fsmul
03F2 AA82      1435            mov     r2,dpl
03F4 AB83      1436            mov     r3,dph
03F6 ACF0      1437            mov     r4,b
03F8 FD        1438            mov     r5,a
03F9 E581      1439            mov     a,sp
03FB 24FC      1440            add     a,#0xfc
03FD F581      1441            mov     sp,a
03FF 858A82    1442            mov     dpl,_TL0
0402 C002      1443            push    ar2
0404 C003      1444            push    ar3
0406 C004      1445            push    ar4
0408 C005      1446            push    ar5
040A 120100    1447            lcall   ___uchar2fs
040D AE82      1448            mov     r6,dpl
040F AF83      1449            mov     r7,dph
0411 A8F0      1450            mov     r0,b
0413 F9        1451            mov     r1,a
0414 D005      1452            pop     ar5
0416 D004      1453            pop     ar4
0418 D003      1454            pop     ar3
041A D002      1455            pop     ar2
041C C006      1456            push    ar6
041E C007      1457            push    ar7
0420 C000      1458            push    ar0
0422 C001      1459            push    ar1
0424 8A82      1460            mov     dpl,r2
0426 8B83      1461            mov     dph,r3
0428 8CF0      1462            mov     b,r4
042A ED        1463            mov     a,r5
042B 120100    1464            lcall   ___fsadd
042E AA82      1465            mov     r2,dpl
0430 AB83      1466            mov     r3,dph
0432 ACF0      1467            mov     r4,b
0434 FD        1468            mov     r5,a
0435 E581      1469            mov     a,sp
0437 24FC      1470            add     a,#0xfc
0439 F581      1471            mov     sp,a
043B C002      1472            push    ar2
043D C003      1473            push    ar3
043F C004      1474            push    ar4
0441 C005      1475            push    ar5
0443 90AAAB    1476            mov     dptr,#0xAAAB
0446 75F02A    1477            mov     b,#0x2A
0449 743E      1478            mov     a,#0x3E
044B 120100    1479            lcall   ___fsmul
044E AA82      1480            mov     r2,dpl
0450 AB83      1481            mov     r3,dph
0452 ACF0      1482            mov     r4,b
0454 FD        1483            mov     r5,a
0455 E581      1484            mov     a,sp
0457 24FC      1485            add     a,#0xfc
0459 F581      1486            mov     sp,a
045B           1487   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:337: return timediff;
045B 8A82      1488            mov     dpl,r2
045D 8B83      1489            mov     dph,r3
045F 8CF0      1490            mov     b,r4
0461 ED        1491            mov     a,r5
0462 22        1492            ret
0463           1493   ;------------------------------------------------------------
0463           1494   ;Allocation info for local variables in function 'refer_peak'
0463           1495   ;------------------------------------------------------------
0463           1496   ;T                         Allocated to registers r2 r3 r4 r5 
0463           1497   ;TT                        Allocated with name '_refer_peak_TT_1_103'
0463           1498   ;vr                        Allocated to registers r2 r3 r4 r5 
0463           1499   ;------------------------------------------------------------
0463           1500   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:341: float refer_peak(float T){
0463           1501   ;        -----------------------------------------
0463           1502   ;         function refer_peak
0463           1503   ;        -----------------------------------------
0463           1504   _refer_peak:
0463 AA82      1505            mov     r2,dpl
0465 AB83      1506            mov     r3,dph
0467 ACF0      1507            mov     r4,b
0469 FD        1508            mov     r5,a
046A           1509   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:343: float TT = T/(float)4.0;
046A E4        1510            clr     a
046B C0E0      1511            push    acc
046D C0E0      1512            push    acc
046F 7480      1513            mov     a,#0x80
0471 C0E0      1514            push    acc
0473 7440      1515            mov     a,#0x40
0475 C0E0      1516            push    acc
0477 8A82      1517            mov     dpl,r2
0479 8B83      1518            mov     dph,r3
047B 8CF0      1519            mov     b,r4
047D ED        1520            mov     a,r5
047E 120100    1521            lcall   ___fsdiv
0481 858200    1522            mov     _refer_peak_TT_1_103,dpl
0484 858301    1523            mov     (_refer_peak_TT_1_103 + 1),dph
0487 85F002    1524            mov     (_refer_peak_TT_1_103 + 2),b
048A F503      1525            mov     (_refer_peak_TT_1_103 + 3),a
048C E581      1526            mov     a,sp
048E 24FC      1527            add     a,#0xfc
0490 F581      1528            mov     sp,a
0492           1529   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:346: TR0;
0492 A28C      1530            mov     c,_TR0
0494           1531   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:347: TMOD &= 0xF0; TMOD |= 0x01; // Set timer 0 as 16-bit timer
0494 5389F0    1532            anl     _TMOD,#0xF0
0497 438901    1533            orl     _TMOD,#0x01
049A           1534   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:348: TH0=0; TL0=0; // Reset the timer
049A 758C00    1535            mov     _TH0,#0x00
049D 758A00    1536            mov     _TL0,#0x00
04A0           1537   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:349: while(P3_0==1); // Wait for the signal to be zero
04A0           1538   L019001?:
04A0 20B028    1539            jb      _P3_0,L019001?
04A3           1540   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:350: while(P3_0==0); // Wait for the signal to be one
04A3           1541   L019004?:
04A3 30B068    1542            jnb     _P3_0,L019004?
04A6           1543   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:351: TR0 =1 ;
04A6 D28C      1544            setb    _TR0
04A8           1545   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:352: while (((float)TH0*0x100+(float)TL0)*(((float)12.0*1000000L)/SYSCLK) < TT);
04A8           1546   L019007?:
04A8 858C82    1547            mov     dpl,_TH0
04AB 120100    1548            lcall   ___uchar2fs
04AE AE82      1549            mov     r6,dpl
04B0 AF83      1550            mov     r7,dph
04B2 A8F0      1551            mov     r0,b
04B4 F9        1552            mov     r1,a
04B5 C006      1553            push    ar6
04B7 C007      1554            push    ar7
04B9 C000      1555            push    ar0
04BB C001      1556            push    ar1
04BD 900000    1557            mov     dptr,#0x0000
04C0 75F080    1558            mov     b,#0x80
04C3 7443      1559            mov     a,#0x43
04C5 120100    1560            lcall   ___fsmul
04C8 AE82      1561            mov     r6,dpl
04CA AF83      1562            mov     r7,dph
04CC A8F0      1563            mov     r0,b
04CE F9        1564            mov     r1,a
04CF E581      1565            mov     a,sp
04D1 24FC      1566            add     a,#0xfc
04D3 F581      1567            mov     sp,a
04D5 858A82    1568            mov     dpl,_TL0
04D8 C006      1569            push    ar6
04DA C007      1570            push    ar7
04DC C000      1571            push    ar0
04DE C001      1572            push    ar1
04E0 120100    1573            lcall   ___uchar2fs
04E3 AA82      1574            mov     r2,dpl
04E5 AB83      1575            mov     r3,dph
04E7 ACF0      1576            mov     r4,b
04E9 FD        1577            mov     r5,a
04EA D001      1578            pop     ar1
04EC D000      1579            pop     ar0
04EE D007      1580            pop     ar7
04F0 D006      1581            pop     ar6
04F2 C002      1582            push    ar2
04F4 C003      1583            push    ar3
04F6 C004      1584            push    ar4
04F8 C005      1585            push    ar5
04FA 8E82      1586            mov     dpl,r6
04FC 8F83      1587            mov     dph,r7
04FE 88F0      1588            mov     b,r0
0500 E9        1589            mov     a,r1
0501 120100    1590            lcall   ___fsadd
0504 AA82      1591            mov     r2,dpl
0506 AB83      1592            mov     r3,dph
0508 ACF0      1593            mov     r4,b
050A FD        1594            mov     r5,a
050B E581      1595            mov     a,sp
050D 24FC      1596            add     a,#0xfc
050F F581      1597            mov     sp,a
0511 C002      1598            push    ar2
0513 C003      1599            push    ar3
0515 C004      1600            push    ar4
0517 C005      1601            push    ar5
0519 90AAAB    1602            mov     dptr,#0xAAAB
051C 75F02A    1603            mov     b,#0x2A
051F 743E      1604            mov     a,#0x3E
0521 120100    1605            lcall   ___fsmul
0524 AA82      1606            mov     r2,dpl
0526 AB83      1607            mov     r3,dph
0528 ACF0      1608            mov     r4,b
052A FD        1609            mov     r5,a
052B E581      1610            mov     a,sp
052D 24FC      1611            add     a,#0xfc
052F F581      1612            mov     sp,a
0531 C000      1613            push    _refer_peak_TT_1_103
0533 C001      1614            push    (_refer_peak_TT_1_103 + 1)
0535 C002      1615            push    (_refer_peak_TT_1_103 + 2)
0537 C003      1616            push    (_refer_peak_TT_1_103 + 3)
0539 8A82      1617            mov     dpl,r2
053B 8B83      1618            mov     dph,r3
053D 8CF0      1619            mov     b,r4
053F ED        1620            mov     a,r5
0540 120100    1621            lcall   ___fslt
0543 AA82      1622            mov     r2,dpl
0545 E581      1623            mov     a,sp
0547 24FC      1624            add     a,#0xfc
0549 F581      1625            mov     sp,a
054B EA        1626            mov     a,r2
054C 6001      1627            jz      L019019?
054E 020100    1628            ljmp    L019007?
0551           1629   L019019?:
0551           1630   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:353: TR0 =0;
0551 C28C      1631            clr     _TR0
0553           1632   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:354: vr =Volts_at_Pin(QFP32_MUX_P2_2);
0553 75820F    1633            mov     dpl,#0x0F
0556           1634   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:356: return vr; 
0556 020100    1635            ljmp    _Volts_at_Pin
0559           1636   ;------------------------------------------------------------
0559           1637   ;Allocation info for local variables in function 'test_peak'
0559           1638   ;------------------------------------------------------------
0559           1639   ;T                         Allocated to registers r2 r3 r4 r5 
0559           1640   ;TT                        Allocated with name '_test_peak_TT_1_105'
0559           1641   ;vr                        Allocated to registers r2 r3 r4 r5 
0559           1642   ;------------------------------------------------------------
0559           1643   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:359: float test_peak(float T){
0559           1644   ;        -----------------------------------------
0559           1645   ;         function test_peak
0559           1646   ;        -----------------------------------------
0559           1647   _test_peak:
0559 AA82      1648            mov     r2,dpl
055B AB83      1649            mov     r3,dph
055D ACF0      1650            mov     r4,b
055F FD        1651            mov     r5,a
0560           1652   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:361: float TT= T/(float)4.0;
0560 E4        1653            clr     a
0561 C0E0      1654            push    acc
0563 C0E0      1655            push    acc
0565 7480      1656            mov     a,#0x80
0567 C0E0      1657            push    acc
0569 7440      1658            mov     a,#0x40
056B C0E0      1659            push    acc
056D 8A82      1660            mov     dpl,r2
056F 8B83      1661            mov     dph,r3
0571 8CF0      1662            mov     b,r4
0573 ED        1663            mov     a,r5
0574 120100    1664            lcall   ___fsdiv
0577 858250    1665            mov     _test_peak_TT_1_105,dpl
057A 858351    1666            mov     (_test_peak_TT_1_105 + 1),dph
057D 85F052    1667            mov     (_test_peak_TT_1_105 + 2),b
0580 F553      1668            mov     (_test_peak_TT_1_105 + 3),a
0582 E581      1669            mov     a,sp
0584 24FC      1670            add     a,#0xfc
0586 F581      1671            mov     sp,a
0588           1672   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:363: TR0;
0588 A28C      1673            mov     c,_TR0
058A           1674   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:364: TMOD &= 0xF0; TMOD |= 0x01; // Set timer 0 as 16-bit timer
058A 5389F0    1675            anl     _TMOD,#0xF0
058D 438901    1676            orl     _TMOD,#0x01
0590           1677   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:365: TH0=0; TL0=0; // Reset the timer
0590 758C00    1678            mov     _TH0,#0x00
0593 758A00    1679            mov     _TL0,#0x00
0596           1680   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:366: while (P3_1==1); // Wait for the signal to be zero
0596           1681   L020001?:
0596 20B168    1682            jb      _P3_1,L020001?
0599           1683   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:367: while (P3_1==0); // Wait for the signal to be one
0599           1684   L020004?:
0599 30B1A8    1685            jnb     _P3_1,L020004?
059C           1686   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:368: TR0 =1;
059C D28C      1687            setb    _TR0
059E           1688   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:369: while (((float)TH0*0x100+(float)TL0)*(((float)12.0*1000000L)/SYSCLK) < TT);
059E           1689   L020007?:
059E 858C82    1690            mov     dpl,_TH0
05A1 120100    1691            lcall   ___uchar2fs
05A4 AE82      1692            mov     r6,dpl
05A6 AF83      1693            mov     r7,dph
05A8 A8F0      1694            mov     r0,b
05AA F9        1695            mov     r1,a
05AB C006      1696            push    ar6
05AD C007      1697            push    ar7
05AF C000      1698            push    ar0
05B1 C001      1699            push    ar1
05B3 900000    1700            mov     dptr,#0x0000
05B6 75F080    1701            mov     b,#0x80
05B9 7443      1702            mov     a,#0x43
05BB 120100    1703            lcall   ___fsmul
05BE AE82      1704            mov     r6,dpl
05C0 AF83      1705            mov     r7,dph
05C2 A8F0      1706            mov     r0,b
05C4 F9        1707            mov     r1,a
05C5 E581      1708            mov     a,sp
05C7 24FC      1709            add     a,#0xfc
05C9 F581      1710            mov     sp,a
05CB 858A82    1711            mov     dpl,_TL0
05CE C006      1712            push    ar6
05D0 C007      1713            push    ar7
05D2 C000      1714            push    ar0
05D4 C001      1715            push    ar1
05D6 120100    1716            lcall   ___uchar2fs
05D9 AA82      1717            mov     r2,dpl
05DB AB83      1718            mov     r3,dph
05DD ACF0      1719            mov     r4,b
05DF FD        1720            mov     r5,a
05E0 D001      1721            pop     ar1
05E2 D000      1722            pop     ar0
05E4 D007      1723            pop     ar7
05E6 D006      1724            pop     ar6
05E8 C002      1725            push    ar2
05EA C003      1726            push    ar3
05EC C004      1727            push    ar4
05EE C005      1728            push    ar5
05F0 8E82      1729            mov     dpl,r6
05F2 8F83      1730            mov     dph,r7
05F4 88F0      1731            mov     b,r0
05F6 E9        1732            mov     a,r1
05F7 120100    1733            lcall   ___fsadd
05FA AA82      1734            mov     r2,dpl
05FC AB83      1735            mov     r3,dph
05FE ACF0      1736            mov     r4,b
0600 FD        1737            mov     r5,a
0601 E581      1738            mov     a,sp
0603 24FC      1739            add     a,#0xfc
0605 F581      1740            mov     sp,a
0607 C002      1741            push    ar2
0609 C003      1742            push    ar3
060B C004      1743            push    ar4
060D C005      1744            push    ar5
060F 90AAAB    1745            mov     dptr,#0xAAAB
0612 75F02A    1746            mov     b,#0x2A
0615 743E      1747            mov     a,#0x3E
0617 120100    1748            lcall   ___fsmul
061A AA82      1749            mov     r2,dpl
061C AB83      1750            mov     r3,dph
061E ACF0      1751            mov     r4,b
0620 FD        1752            mov     r5,a
0621 E581      1753            mov     a,sp
0623 24FC      1754            add     a,#0xfc
0625 F581      1755            mov     sp,a
0627 C050      1756            push    _test_peak_TT_1_105
0629 C051      1757            push    (_test_peak_TT_1_105 + 1)
062B C052      1758            push    (_test_peak_TT_1_105 + 2)
062D C053      1759            push    (_test_peak_TT_1_105 + 3)
062F 8A82      1760            mov     dpl,r2
0631 8B83      1761            mov     dph,r3
0633 8CF0      1762            mov     b,r4
0635 ED        1763            mov     a,r5
0636 120100    1764            lcall   ___fslt
0639 AA82      1765            mov     r2,dpl
063B E581      1766            mov     a,sp
063D 24FC      1767            add     a,#0xfc
063F F581      1768            mov     sp,a
0641 EA        1769            mov     a,r2
0642 6001      1770            jz      L020019?
0644 020100    1771            ljmp    L020007?
0647           1772   L020019?:
0647           1773   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:370: TR0=0 ;
0647 C28C      1774            clr     _TR0
0649           1775   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:371: vr =Volts_at_Pin(QFP32_MUX_P2_3);
0649 758210    1776            mov     dpl,#0x10
064C           1777   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:372: return vr;
064C 020100    1778            ljmp    _Volts_at_Pin
064F           1779   ;------------------------------------------------------------
064F           1780   ;Allocation info for local variables in function 'readbutton'
064F           1781   ;------------------------------------------------------------
064F           1782   ;a                         Allocated to registers r2 
064F           1783   ;f                         Allocated to registers r3 r4 
064F           1784   ;------------------------------------------------------------
064F           1785   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:375: int readbutton(unsigned char a){
064F           1786   ;        -----------------------------------------
064F           1787   ;         function readbutton
064F           1788   ;        -----------------------------------------
064F           1789   _readbutton:
064F AA82      1790            mov     r2,dpl
0651           1791   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:376: int f =0;
0651 7B00      1792            mov     r3,#0x00
0653 7C00      1793            mov     r4,#0x00
0655           1794   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:377: if(a==1){
0655 BA0168    1795            cjne    r2,#0x01,L021002?
0658           1796   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:378: f =1 ;
0658 7B01      1797            mov     r3,#0x01
065A 7C00      1798            mov     r4,#0x00
065C           1799   L021002?:
065C           1800   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:380: return f;
065C 8B82      1801            mov     dpl,r3
065E 8C83      1802            mov     dph,r4
0660 22        1803            ret
0661           1804   ;------------------------------------------------------------
0661           1805   ;Allocation info for local variables in function 'main'
0661           1806   ;------------------------------------------------------------
0661           1807   ;reference_rms             Allocated to registers r6 r7 r0 r1 
0661           1808   ;reference_p               Allocated to registers r6 r7 r0 r1 
0661           1809   ;test_rms                  Allocated to registers r2 r3 r4 r5 
0661           1810   ;test_p                    Allocated to registers r2 r3 r4 r5 
0661           1811   ;F                         Allocated with name '_main_F_1_110'
0661           1812   ;T                         Allocated to registers r2 r3 r4 r5 
0661           1813   ;time_diff                 Allocated to registers r6 r7 r0 r1 
0661           1814   ;phase_diff                Allocated with name '_main_phase_diff_1_110'
0661           1815   ;buff_t                    Allocated with name '_main_buff_t_1_110'
0661           1816   ;buff_r                    Allocated with name '_main_buff_r_1_110'
0661           1817   ;buff_f                    Allocated with name '_main_buff_f_1_110'
0661           1818   ;buff_phase                Allocated with name '_main_buff_phase_1_110'
0661           1819   ;flag                      Allocated to registers 
0661           1820   ;------------------------------------------------------------
0661           1821   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:382: void main (void)
0661           1822   ;        -----------------------------------------
0661           1823   ;         function main
0661           1824   ;        -----------------------------------------
0661           1825   _main:
0661           1826   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:397: timer0_init();
0661 120100    1827            lcall   _timer0_init
0664           1828   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:399: LCD_4BIT();
0664 120100    1829            lcall   _LCD_4BIT
0667           1830   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:402: waitms(500); // Give PuTTy a chance to start before sending
0667 9001F4    1831            mov     dptr,#0x01F4
066A 120100    1832            lcall   _waitms
066D           1833   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:403: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
066D 74A8      1834            mov     a,#__str_0
066F C0E0      1835            push    acc
0671 74C9      1836            mov     a,#(__str_0 >> 8)
0673 C0E0      1837            push    acc
0675 7480      1838            mov     a,#0x80
0677 C0E0      1839            push    acc
0679 120100    1840            lcall   _printf
067C 1581      1841            dec     sp
067E 1581      1842            dec     sp
0680 1581      1843            dec     sp
0682           1844   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:404: InitADC();
0682 120100    1845            lcall   _InitADC
0685           1846   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:406: InitPinADC(2, 2); // Configure P2.2 as analog input  refercne 
0685 756002    1847            mov     _InitPinADC_PARM_2,#0x02
0688 758202    1848            mov     dpl,#0x02
068B 120100    1849            lcall   _InitPinADC
068E           1850   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:407: InitPinADC(2, 3); // Configure P2.3 as analog input   test 
068E 756003    1851            mov     _InitPinADC_PARM_2,#0x03
0691 758202    1852            mov     dpl,#0x02
0694 120100    1853            lcall   _InitPinADC
0697           1854   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:412: while(1)
0697           1855   L022005?:
0697           1856   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:414: T = (float)2.0*halfperiod();
0697 120100    1857            lcall   _halfperiod
069A AA82      1858            mov     r2,dpl
069C AB83      1859            mov     r3,dph
069E ACF0      1860            mov     r4,b
06A0 FD        1861            mov     r5,a
06A1 C002      1862            push    ar2
06A3 C003      1863            push    ar3
06A5 C004      1864            push    ar4
06A7 C005      1865            push    ar5
06A9 900000    1866            mov     dptr,#(0x00&0x00ff)
06AC E4        1867            clr     a
06AD F5F0      1868            mov     b,a
06AF 7440      1869            mov     a,#0x40
06B1 120100    1870            lcall   ___fsmul
06B4 AA82      1871            mov     r2,dpl
06B6 AB83      1872            mov     r3,dph
06B8 ACF0      1873            mov     r4,b
06BA FD        1874            mov     r5,a
06BB E581      1875            mov     a,sp
06BD 24FC      1876            add     a,#0xfc
06BF F581      1877            mov     sp,a
06C1           1878   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:415: printf("period = %.3f s\n",T);
06C1 C002      1879            push    ar2
06C3 C003      1880            push    ar3
06C5 C004      1881            push    ar4
06C7 C005      1882            push    ar5
06C9 C002      1883            push    ar2
06CB C003      1884            push    ar3
06CD C004      1885            push    ar4
06CF C005      1886            push    ar5
06D1 7468      1887            mov     a,#__str_1
06D3 C0E0      1888            push    acc
06D5 74CA      1889            mov     a,#(__str_1 >> 8)
06D7 C0E0      1890            push    acc
06D9 7480      1891            mov     a,#0x80
06DB C0E0      1892            push    acc
06DD 120100    1893            lcall   _printf
06E0 E581      1894            mov     a,sp
06E2 24F9      1895            add     a,#0xf9
06E4 F581      1896            mov     sp,a
06E6 D005      1897            pop     ar5
06E8 D004      1898            pop     ar4
06EA D003      1899            pop     ar3
06EC D002      1900            pop     ar2
06EE           1901   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:416: F= (float)1.0/T;
06EE C002      1902            push    ar2
06F0 C003      1903            push    ar3
06F2 C004      1904            push    ar4
06F4 C005      1905            push    ar5
06F6 C002      1906            push    ar2
06F8 C003      1907            push    ar3
06FA C004      1908            push    ar4
06FC C005      1909            push    ar5
06FE 900000    1910            mov     dptr,#0x0000
0701 75F080    1911            mov     b,#0x80
0704 743F      1912            mov     a,#0x3F
0706 120100    1913            lcall   ___fsdiv
0709 858290    1914            mov     _main_F_1_110,dpl
070C 858391    1915            mov     (_main_F_1_110 + 1),dph
070F 85F092    1916            mov     (_main_F_1_110 + 2),b
0712 F593      1917            mov     (_main_F_1_110 + 3),a
0714 E581      1918            mov     a,sp
0716 24FC      1919            add     a,#0xfc
0718 F581      1920            mov     sp,a
071A           1921   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:417: printf("frequency = %.3f hz \n",F);
071A C090      1922            push    _main_F_1_110
071C C091      1923            push    (_main_F_1_110 + 1)
071E C092      1924            push    (_main_F_1_110 + 2)
0720 C093      1925            push    (_main_F_1_110 + 3)
0722 74A8      1926            mov     a,#__str_2
0724 C0E0      1927            push    acc
0726 74CA      1928            mov     a,#(__str_2 >> 8)
0728 C0E0      1929            push    acc
072A 7480      1930            mov     a,#0x80
072C C0E0      1931            push    acc
072E 120100    1932            lcall   _printf
0731 E581      1933            mov     a,sp
0733 24F9      1934            add     a,#0xf9
0735 F581      1935            mov     sp,a
0737           1936   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:420: time_diff = measure_time_diff();
0737 120100    1937            lcall   _measure_time_diff
073A AE82      1938            mov     r6,dpl
073C AF83      1939            mov     r7,dph
073E A8F0      1940            mov     r0,b
0740 F9        1941            mov     r1,a
0741           1942   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:421: printf("time difference = %.3fus\n",time_diff);
0741 C006      1943            push    ar6
0743 C007      1944            push    ar7
0745 C000      1945            push    ar0
0747 C001      1946            push    ar1
0749 C006      1947            push    ar6
074B C007      1948            push    ar7
074D C000      1949            push    ar0
074F C001      1950            push    ar1
0751 74E8      1951            mov     a,#__str_3
0753 C0E0      1952            push    acc
0755 74CA      1953            mov     a,#(__str_3 >> 8)
0757 C0E0      1954            push    acc
0759 7480      1955            mov     a,#0x80
075B C0E0      1956            push    acc
075D 120100    1957            lcall   _printf
0760 E581      1958            mov     a,sp
0762 24F9      1959            add     a,#0xf9
0764 F581      1960            mov     sp,a
0766           1961   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:422: phase_diff = ((float)360.0*time_diff)/T;
0766 900000    1962            mov     dptr,#0x0000
0769 75F0B4    1963            mov     b,#0xB4
076C 7443      1964            mov     a,#0x43
076E 120100    1965            lcall   ___fsmul
0771 AE82      1966            mov     r6,dpl
0773 AF83      1967            mov     r7,dph
0775 A8F0      1968            mov     r0,b
0777 F9        1969            mov     r1,a
0778 E581      1970            mov     a,sp
077A 24FC      1971            add     a,#0xfc
077C F581      1972            mov     sp,a
077E D005      1973            pop     ar5
0780 D004      1974            pop     ar4
0782 D003      1975            pop     ar3
0784 D002      1976            pop     ar2
0786 C002      1977            push    ar2
0788 C003      1978            push    ar3
078A C004      1979            push    ar4
078C C005      1980            push    ar5
078E C002      1981            push    ar2
0790 C003      1982            push    ar3
0792 C004      1983            push    ar4
0794 C005      1984            push    ar5
0796 8E82      1985            mov     dpl,r6
0798 8F83      1986            mov     dph,r7
079A 88F0      1987            mov     b,r0
079C E9        1988            mov     a,r1
079D 120100    1989            lcall   ___fsdiv
07A0 8582E0    1990            mov     _main_phase_diff_1_110,dpl
07A3 8583E1    1991            mov     (_main_phase_diff_1_110 + 1),dph
07A6 85F0E2    1992            mov     (_main_phase_diff_1_110 + 2),b
07A9 F5E3      1993            mov     (_main_phase_diff_1_110 + 3),a
07AB E581      1994            mov     a,sp
07AD 24FC      1995            add     a,#0xfc
07AF F581      1996            mov     sp,a
07B1           1997   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:423: printf("phase differcne = %.3f degrees\n",phase_diff);
07B1 C0E0      1998            push    _main_phase_diff_1_110
07B3 C0E1      1999            push    (_main_phase_diff_1_110 + 1)
07B5 C0E2      2000            push    (_main_phase_diff_1_110 + 2)
07B7 C0E3      2001            push    (_main_phase_diff_1_110 + 3)
07B9 7428      2002            mov     a,#__str_4
07BB C0E0      2003            push    acc
07BD 74CB      2004            mov     a,#(__str_4 >> 8)
07BF C0E0      2005            push    acc
07C1 7480      2006            mov     a,#0x80
07C3 C0E0      2007            push    acc
07C5 120100    2008            lcall   _printf
07C8 E581      2009            mov     a,sp
07CA 24F9      2010            add     a,#0xf9
07CC F581      2011            mov     sp,a
07CE D005      2012            pop     ar5
07D0 D004      2013            pop     ar4
07D2 D003      2014            pop     ar3
07D4 D002      2015            pop     ar2
07D6           2016   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:426: reference_p= refer_peak(T);
07D6 8A82      2017            mov     dpl,r2
07D8 8B83      2018            mov     dph,r3
07DA 8CF0      2019            mov     b,r4
07DC ED        2020            mov     a,r5
07DD C002      2021            push    ar2
07DF C003      2022            push    ar3
07E1 C004      2023            push    ar4
07E3 C005      2024            push    ar5
07E5 120100    2025            lcall   _refer_peak
07E8 AE82      2026            mov     r6,dpl
07EA AF83      2027            mov     r7,dph
07EC A8F0      2028            mov     r0,b
07EE F9        2029            mov     r1,a
07EF D005      2030            pop     ar5
07F1 D004      2031            pop     ar4
07F3 D003      2032            pop     ar3
07F5 D002      2033            pop     ar2
07F7           2034   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:427: test_p = test_peak(T);
07F7 8A82      2035            mov     dpl,r2
07F9 8B83      2036            mov     dph,r3
07FB 8CF0      2037            mov     b,r4
07FD ED        2038            mov     a,r5
07FE C006      2039            push    ar6
0800 C007      2040            push    ar7
0802 C000      2041            push    ar0
0804 C001      2042            push    ar1
0806 120100    2043            lcall   _test_peak
0809 AA82      2044            mov     r2,dpl
080B AB83      2045            mov     r3,dph
080D ACF0      2046            mov     r4,b
080F FD        2047            mov     r5,a
0810 D001      2048            pop     ar1
0812 D000      2049            pop     ar0
0814 D007      2050            pop     ar7
0816 D006      2051            pop     ar6
0818           2052   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:428: printf("reference peak =%.3fv \n", reference_p);
0818 C002      2053            push    ar2
081A C003      2054            push    ar3
081C C004      2055            push    ar4
081E C005      2056            push    ar5
0820 C006      2057            push    ar6
0822 C007      2058            push    ar7
0824 C000      2059            push    ar0
0826 C001      2060            push    ar1
0828 C006      2061            push    ar6
082A C007      2062            push    ar7
082C C000      2063            push    ar0
082E C001      2064            push    ar1
0830 7468      2065            mov     a,#__str_5
0832 C0E0      2066            push    acc
0834 74CB      2067            mov     a,#(__str_5 >> 8)
0836 C0E0      2068            push    acc
0838 7480      2069            mov     a,#0x80
083A C0E0      2070            push    acc
083C 120100    2071            lcall   _printf
083F E581      2072            mov     a,sp
0841 24F9      2073            add     a,#0xf9
0843 F581      2074            mov     sp,a
0845 D001      2075            pop     ar1
0847 D000      2076            pop     ar0
0849 D007      2077            pop     ar7
084B D006      2078            pop     ar6
084D D005      2079            pop     ar5
084F D004      2080            pop     ar4
0851 D003      2081            pop     ar3
0853 D002      2082            pop     ar2
0855           2083   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:429: printf("test peak =%.3fv\n", test_p);
0855 C002      2084            push    ar2
0857 C003      2085            push    ar3
0859 C004      2086            push    ar4
085B C005      2087            push    ar5
085D C006      2088            push    ar6
085F C007      2089            push    ar7
0861 C000      2090            push    ar0
0863 C001      2091            push    ar1
0865 C002      2092            push    ar2
0867 C003      2093            push    ar3
0869 C004      2094            push    ar4
086B C005      2095            push    ar5
086D 74A8      2096            mov     a,#__str_6
086F C0E0      2097            push    acc
0871 74CB      2098            mov     a,#(__str_6 >> 8)
0873 C0E0      2099            push    acc
0875 7480      2100            mov     a,#0x80
0877 C0E0      2101            push    acc
0879 120100    2102            lcall   _printf
087C E581      2103            mov     a,sp
087E 24F9      2104            add     a,#0xf9
0880 F581      2105            mov     sp,a
0882 D001      2106            pop     ar1
0884 D000      2107            pop     ar0
0886 D007      2108            pop     ar7
0888 D006      2109            pop     ar6
088A           2110   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:431: reference_rms = reference_p/(float)1.4142;
088A 7481      2111            mov     a,#0x81
088C C0E0      2112            push    acc
088E 7404      2113            mov     a,#0x04
0890 C0E0      2114            push    acc
0892 74B5      2115            mov     a,#0xB5
0894 C0E0      2116            push    acc
0896 743F      2117            mov     a,#0x3F
0898 C0E0      2118            push    acc
089A 8E82      2119            mov     dpl,r6
089C 8F83      2120            mov     dph,r7
089E 88F0      2121            mov     b,r0
08A0 E9        2122            mov     a,r1
08A1 120100    2123            lcall   ___fsdiv
08A4 AE82      2124            mov     r6,dpl
08A6 AF83      2125            mov     r7,dph
08A8 A8F0      2126            mov     r0,b
08AA F9        2127            mov     r1,a
08AB E581      2128            mov     a,sp
08AD 24FC      2129            add     a,#0xfc
08AF F581      2130            mov     sp,a
08B1 D005      2131            pop     ar5
08B3 D004      2132            pop     ar4
08B5 D003      2133            pop     ar3
08B7 D002      2134            pop     ar2
08B9           2135   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:432: test_rms = test_p/(float)1.4142;
08B9 C006      2136            push    ar6
08BB C007      2137            push    ar7
08BD C000      2138            push    ar0
08BF C001      2139            push    ar1
08C1 7481      2140            mov     a,#0x81
08C3 C0E0      2141            push    acc
08C5 7404      2142            mov     a,#0x04
08C7 C0E0      2143            push    acc
08C9 74B5      2144            mov     a,#0xB5
08CB C0E0      2145            push    acc
08CD 743F      2146            mov     a,#0x3F
08CF C0E0      2147            push    acc
08D1 8A82      2148            mov     dpl,r2
08D3 8B83      2149            mov     dph,r3
08D5 8CF0      2150            mov     b,r4
08D7 ED        2151            mov     a,r5
08D8 120100    2152            lcall   ___fsdiv
08DB AA82      2153            mov     r2,dpl
08DD AB83      2154            mov     r3,dph
08DF ACF0      2155            mov     r4,b
08E1 FD        2156            mov     r5,a
08E2 E581      2157            mov     a,sp
08E4 24FC      2158            add     a,#0xfc
08E6 F581      2159            mov     sp,a
08E8 D001      2160            pop     ar1
08EA D000      2161            pop     ar0
08EC D007      2162            pop     ar7
08EE D006      2163            pop     ar6
08F0           2164   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:433: printf("reference rms=%.3fv\n", reference_rms);
08F0 C002      2165            push    ar2
08F2 C003      2166            push    ar3
08F4 C004      2167            push    ar4
08F6 C005      2168            push    ar5
08F8 C006      2169            push    ar6
08FA C007      2170            push    ar7
08FC C000      2171            push    ar0
08FE C001      2172            push    ar1
0900 C006      2173            push    ar6
0902 C007      2174            push    ar7
0904 C000      2175            push    ar0
0906 C001      2176            push    ar1
0908 74E8      2177            mov     a,#__str_7
090A C0E0      2178            push    acc
090C 74CB      2179            mov     a,#(__str_7 >> 8)
090E C0E0      2180            push    acc
0910 7480      2181            mov     a,#0x80
0912 C0E0      2182            push    acc
0914 120100    2183            lcall   _printf
0917 E581      2184            mov     a,sp
0919 24F9      2185            add     a,#0xf9
091B F581      2186            mov     sp,a
091D D001      2187            pop     ar1
091F D000      2188            pop     ar0
0921 D007      2189            pop     ar7
0923 D006      2190            pop     ar6
0925 D005      2191            pop     ar5
0927 D004      2192            pop     ar4
0929 D003      2193            pop     ar3
092B D002      2194            pop     ar2
092D           2195   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:434: printf("test rms =%.3fv\n", test_rms);
092D C002      2196            push    ar2
092F C003      2197            push    ar3
0931 C004      2198            push    ar4
0933 C005      2199            push    ar5
0935 C006      2200            push    ar6
0937 C007      2201            push    ar7
0939 C000      2202            push    ar0
093B C001      2203            push    ar1
093D C002      2204            push    ar2
093F C003      2205            push    ar3
0941 C004      2206            push    ar4
0943 C005      2207            push    ar5
0945 7428      2208            mov     a,#__str_8
0947 C0E0      2209            push    acc
0949 74CC      2210            mov     a,#(__str_8 >> 8)
094B C0E0      2211            push    acc
094D 7480      2212            mov     a,#0x80
094F C0E0      2213            push    acc
0951 120100    2214            lcall   _printf
0954 E581      2215            mov     a,sp
0956 24F9      2216            add     a,#0xf9
0958 F581      2217            mov     sp,a
095A           2218   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:436: sprintf(buff_r,"%.3f",reference_rms);
095A 7468      2219            mov     a,#__str_9
095C C0E0      2220            push    acc
095E 74CC      2221            mov     a,#(__str_9 >> 8)
0960 C0E0      2222            push    acc
0962 7480      2223            mov     a,#0x80
0964 C0E0      2224            push    acc
0966 7480      2225            mov     a,#_main_buff_r_1_110
0968 C0E0      2226            push    acc
096A 74B8      2227            mov     a,#(_main_buff_r_1_110 >> 8)
096C C0E0      2228            push    acc
096E 7440      2229            mov     a,#0x40
0970 C0E0      2230            push    acc
0972 120100    2231            lcall   _sprintf
0975 E581      2232            mov     a,sp
0977 24F6      2233            add     a,#0xf6
0979 F581      2234            mov     sp,a
097B           2235   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:437: sprintf(buff_t,"%.3f",test_rms);
097B 7468      2236            mov     a,#__str_9
097D C0E0      2237            push    acc
097F 74CC      2238            mov     a,#(__str_9 >> 8)
0981 C0E0      2239            push    acc
0983 7480      2240            mov     a,#0x80
0985 C0E0      2241            push    acc
0987 7430      2242            mov     a,#_main_buff_t_1_110
0989 C0E0      2243            push    acc
098B 74B8      2244            mov     a,#(_main_buff_t_1_110 >> 8)
098D C0E0      2245            push    acc
098F 7440      2246            mov     a,#0x40
0991 C0E0      2247            push    acc
0993 120100    2248            lcall   _sprintf
0996 E581      2249            mov     a,sp
0998 24F6      2250            add     a,#0xf6
099A F581      2251            mov     sp,a
099C           2252   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:438: sprintf(buff_f,"%.3f",F);
099C C090      2253            push    _main_F_1_110
099E C091      2254            push    (_main_F_1_110 + 1)
09A0 C092      2255            push    (_main_F_1_110 + 2)
09A2 C093      2256            push    (_main_F_1_110 + 3)
09A4 7468      2257            mov     a,#__str_9
09A6 C0E0      2258            push    acc
09A8 74CC      2259            mov     a,#(__str_9 >> 8)
09AA C0E0      2260            push    acc
09AC 7480      2261            mov     a,#0x80
09AE C0E0      2262            push    acc
09B0 74D0      2263            mov     a,#_main_buff_f_1_110
09B2 C0E0      2264            push    acc
09B4 74B8      2265            mov     a,#(_main_buff_f_1_110 >> 8)
09B6 C0E0      2266            push    acc
09B8 7440      2267            mov     a,#0x40
09BA C0E0      2268            push    acc
09BC 120100    2269            lcall   _sprintf
09BF E581      2270            mov     a,sp
09C1 24F6      2271            add     a,#0xf6
09C3 F581      2272            mov     sp,a
09C5           2273   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:439: sprintf(buff_phase,"%.3f",phase_diff);
09C5 C0E0      2274            push    _main_phase_diff_1_110
09C7 C0E1      2275            push    (_main_phase_diff_1_110 + 1)
09C9 C0E2      2276            push    (_main_phase_diff_1_110 + 2)
09CB C0E3      2277            push    (_main_phase_diff_1_110 + 3)
09CD 7468      2278            mov     a,#__str_9
09CF C0E0      2279            push    acc
09D1 74CC      2280            mov     a,#(__str_9 >> 8)
09D3 C0E0      2281            push    acc
09D5 7480      2282            mov     a,#0x80
09D7 C0E0      2283            push    acc
09D9 7420      2284            mov     a,#_main_buff_phase_1_110
09DB C0E0      2285            push    acc
09DD 74B9      2286            mov     a,#(_main_buff_phase_1_110 >> 8)
09DF C0E0      2287            push    acc
09E1 7440      2288            mov     a,#0x40
09E3 C0E0      2289            push    acc
09E5 120100    2290            lcall   _sprintf
09E8 E581      2291            mov     a,sp
09EA 24F6      2292            add     a,#0xf6
09EC F581      2293            mov     sp,a
09EE           2294   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:441: flag =readbutton(button);
09EE A2B3      2295            mov     c,_P3_3
09F0 B3        2296            cpl     c
09F1 E4        2297            clr     a
09F2 33        2298            rlc     a
09F3 F582      2299            mov     dpl,a
09F5 120100    2300            lcall   _readbutton
09F8 E582      2301            mov     a,dpl
09FA 8583F0    2302            mov     b,dph
09FD           2303   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:442: if(flag){
09FD 45F0      2304            orl     a,b
09FF 6001      2305            jz      L022002?
0A01           2306   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:443: LCDprint(buff_r, 1, 1);
0A01 75A001    2307            mov     _LCDprint_PARM_2,#0x01
0A04 D210      2308            setb    _LCDprint_PARM_3
0A06 90B880    2309            mov     dptr,#_main_buff_r_1_110
0A09 75F040    2310            mov     b,#0x40
0A0C 120100    2311            lcall   _LCDprint
0A0F           2312   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:444: LCDprint(buff_t, 2, 1);
0A0F 75A002    2313            mov     _LCDprint_PARM_2,#0x02
0A12 D210      2314            setb    _LCDprint_PARM_3
0A14 90B830    2315            mov     dptr,#_main_buff_t_1_110
0A17 75F040    2316            mov     b,#0x40
0A1A 120100    2317            lcall   _LCDprint
0A1D 8001      2318            sjmp    L022003?
0A1F           2319   L022002?:
0A1F           2320   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:450: LCDprint(buff_f, 1, 0);
0A1F 75A001    2321            mov     _LCDprint_PARM_2,#0x01
0A22 C210      2322            clr     _LCDprint_PARM_3
0A24 90B8D0    2323            mov     dptr,#_main_buff_f_1_110
0A27 75F040    2324            mov     b,#0x40
0A2A 120100    2325            lcall   _LCDprint
0A2D           2326   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:451: LCDprint(buff_phase, 2, 1);
0A2D 75A002    2327            mov     _LCDprint_PARM_2,#0x02
0A30 D210      2328            setb    _LCDprint_PARM_3
0A32 90B920    2329            mov     dptr,#_main_buff_phase_1_110
0A35 75F040    2330            mov     b,#0x40
0A38 120100    2331            lcall   _LCDprint
0A3B           2332   L022003?:
0A3B           2333   ;        C:\CrossIDE\Call51\Bin\lab5\lab5.c:456: waitms(500);
0A3B 9001F4    2334            mov     dptr,#0x01F4
0A3E 120100    2335            lcall   _waitms
0A41 020100    2336            ljmp    L022005?
0A44           2337            rseg R_CSEG
0A44           2338   
0000           2339            rseg R_XINIT
0000           2340   
0000           2341            rseg R_CONST
0000           2342   __str_0:
0000 1B        2343            db 0x1B
0001 5B324A    2344            db '[2J'
0004 00        2345            db 0x00
0005           2346   __str_1:
0005 70657269  2347            db 'period = %.3f s'
     6F64203D
     20252E33
     662073
0014 0A        2348            db 0x0A
0015 00        2349            db 0x00
0016           2350   __str_2:
0016 66726571  2351            db 'frequency = %.3f hz '
     75656E63
     79203D20
     252E3366
     20687A20
002A 0A        2352            db 0x0A
002B 00        2353            db 0x00
002C           2354   __str_3:
002C 74696D65  2355            db 'time difference = %.3fus'
     20646966
     66657265
     6E636520
     3D20252E
     33667573
0044 0A        2356            db 0x0A
0045 00        2357            db 0x00
0046           2358   __str_4:
0046 70686173  2359            db 'phase differcne = %.3f degrees'
     65206469
     66666572
     636E6520
     3D20252E
     33662064
     65677265
     6573
0064 0A        2360            db 0x0A
0065 00        2361            db 0x00
0066           2362   __str_5:
0066 72656665  2363            db 'reference peak =%.3fv '
     72656E63
     65207065
     616B203D
     252E3366
     7620
007C 0A        2364            db 0x0A
007D 00        2365            db 0x00
007E           2366   __str_6:
007E 74657374  2367            db 'test peak =%.3fv'
     20706561
     6B203D25
     2E336676
008E 0A        2368            db 0x0A
008F 00        2369            db 0x00
0090           2370   __str_7:
0090 72656665  2371            db 'reference rms=%.3fv'
     72656E63
     6520726D
     733D252E
     336676
00A3 0A        2372            db 0x0A
00A4 00        2373            db 0x00
00A5           2374   __str_8:
00A5 74657374  2375            db 'test rms =%.3fv'
     20726D73
     203D252E
     336676
00B4 0A        2376            db 0x0A
00B5 00        2377            db 0x00
00B6           2378   __str_9:
00B6 252E3366  2379            db '%.3f'
00BA 00        2380            db 0x00
00BB           2381   
0003           2382            CSEG
0003           2383   
0003           2384   end
